; LOW.S
; LOW MEMORY OF THE DOS/281 SYSTEM
; HANDLES SYSCALLS

; EQUATES
KMEM_ST	= 0X78	; KERNEL MEMORY STACK SAVE SLOT
ARG_BNK = 0x6C	; ARGUMENT BANK
DFT_USR	= 0X6B	; DEFAULT USER AREA

.BANK 0
.TEXT

	; JUMP STUB FOR RECEIVING SYSCALLS
	JUMP	SYSPREP


	; ENTRY POINT FOR THE KERENL AFTER THE 2ND STAGE BOOT
	; JUST JUMP DIRECTLY TO THE 'INIT' ROUTINE IN CORE 
ENTRY:	LOADI	B,CORE0_B
	LOADI	C,INIT
	JUMP	INDIR
	
	; SYSTEM CALL HANDLER PREPARATION
	; SAVE THE PREVIOUS STACK, AND SWITCH TO THE KERNEL STACK
	; THEN MOVE TO THE SYSTEM CALL HANDLER
SYSPREP:STORE	[KMEM_ST],D
	
	; GET THE ARGUMENT BANK
	LOAD	D,[ARG_BNK]
	
	; MOVE TO KERNEL WORK AREA
	LOADI	C,WORK_B
	STORE	[DBANK],C
	
	; SET THE SOURCE BANK
	STORE	[SRC_BNK],D
	
	; SET UP KERNEL STACK
0:	LOADI	D,0X80-2
	
	; SAVE PLACE RETURN ADDRESS INTO THE STACK
	LOADI	C,SYSDONE
	STOREF	[D],C
	LOADI	C,0
	STOREF	[D+1],C
	
	; STICK THE CURRENT SYSTEM CALL IN M0
	STORE	[M0],B
	
	; HANDLE THE SYSTEM CALL
	LOADI	B,SYS0_B
	LOADI	C,SYSHNDL
	JUMP	INDIR
	
	
	; SYSTEM CALL DONE
SYSDONE:LOADI	C,0
	STORE	[DBANK],C
	
	; RESTORE USER STACK
	LOAD	D,[KMEM_ST]
	
	; RETURN
	JUMP	IRET
	
.DATA

	; SET UP ZERO PAGE
.ORG	0X6B
.DEF BYTE	'0'



	; SET UP UPPER BANK STUFF
	; THE 'B_' SYMBOLS WILL BE USED TO KEEP TRACK OF WHAT BANKS ARE
	; IN USE
	; 'BI" WILL BE USED FOR INSTRUCTION BANKS
	; 'BD' WILL BE USED FOR DATA BANKS
	; AT THE END OF ASSEMBLY, THESE VALUES WILL BE USED TO DETERMINE
	; HOW MUCH FREE MEMORY USER PROGRAMS HAVE
BI	= 255
BD	= 255

