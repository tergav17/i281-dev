; MBR.S
; MASTER BOOT RECORD (2ND STAGE BOOTLOADER)

; DEFINES
INDIR	= 0X01
PRGM	= 0X02
HALT	= 0X7F

DBANK	= 0X80		; DATA BANK ADDRESS 
CF	= 0XA0		; COMPACT FLASH BASE ADDRESS
CF_DATA	= CF+0X00	; CF DATA
CF_ERR	= CF+0X01	; CF ERROR
CF_FEAT	= CF+0x01	; CF FEATURES
CF_CNT	= CF+0X02	; CF SECTOR COUNT
CF_LBA0	= CF+0X03	; CF LBA BITS 0-7
CF_LBA1	= CF+0X04	; CF LBA BITS 8-15
CF_LBA2	= CF+0X05	; CF LBA BITS 16-23
CF_LBA3	= CF+0X06	; CF LBA BITS 24-27
CF_STAT	= CF+0X07	; CF STATUS
CF_CMD	= CF+0X07	; CF COMMAND

CF_READ	= 0X20		; READ COMMAND
.TEXT

	; LOAD ADDRESS OF FILE RECORDS
	LOADI	A,0
	STORE	[CF_LBA1],A
	LOADI	A,17
	
	; BEGIN FILE SEARCH
	; EXECUTE READ OPERATION
0:	STORE	[CF_LBA0],A
	LOADI	C,@+2
	JUMP	CFREAD
	
	; MATCH THE FIRST 10 WORDS
1:	LOADI	C,FNAME
	LOADI	D,0
	
	; MATCH CHARACTER
2:	LOAD	A,[CF_DATA]
	LOADF	B,[C]
	CMP	A,B
	BRZ	3F
	
	; DOESN'T MATCH, SET A FLAG
	LOADI	D,1
	
	; NEXT CHARACTER
3:	SUBI	C,FNAME+9
	BRZ	4F
	ADDI	C,FNAME+10
	JUMP	2B

	; MATCH COMPLETE
	; DID WE WIN?
4:	ADDI	D,0
	BRZ	9F
	
	; NO WE DID NOT, NEXT ENTRY
	LOADI	B,6
5:	LOAD	A,[CF_DATA]
	SUBI	B,1
	BRNZ	5B
	
	; CHECK NEXT ENTRY STATUS
	ADDI	A,0
	
	; IT'S 0X00: DO THE NEXT ENTRY IN THE BLOCK
	BRZ	1B
	
	; IT'S 0XFF: WE ARE OUT OF ENTRIES
	BRN	HALT
	
	; IT'S 0X01, THE RECORD IS ON THE NEXT BLOCK
	LOAD	A,[CF_LBA0]
	ADDI	A,1
	JUMP	0B

	; WE HAVE FOUND THE FILE, EXTRACT RELEVANT DATA
9:
	
	

	; READS FROM THE CF CARD
	; USING A PRE-LOADED LBA ADDRESS,
	; A READ COMMAND IS EXECUTED AND
	; A WAIT IS PERFORMED UNTIL THE
	; COMMAND COMPLETES
	; USES: A, C, D
CFREAD:	LOADI	A,1
	STORE	[CF_CNT],A

	; LETS WAIT FOR A POTENTIAL PREVIOUS COMMAND TO COMPLETE
	MOV	D,C
	LOADI	C,@+2
	JUMP	CFWAIT

	; ACTUALLY EXECUTE THE READ COMMAND NOW
	LOADI	A,CF_READ
	STORE	[CF_CMD],A
	
	; WAIT FOR IT TO COMPLETE
	MOV	C,D

	; WAIT FOR THE CF CARD TO BECOME READY
	; FOR THIS TO HAPPEN, THE BUSY FLAG MUST BE 0
	; AND THE READY FLAG MUST BE 1
	; IF A CF CARD ISN'T PRESENT, THIS ROUTINE HANGS
	; BUT WE DON'T CARE
	; USES: B
CFWAIT:	LOAD	A,[CF_STAT]

	; CHECK BIT 7 (BUSY FLAG)
	SHIFTL	A
	
	; GO BACK TO START BUSY
	BRC	CFWAIT
	
	; CHECK BIT 6 (READY FLAG)
	SHIFTL	A
	
	; GO BACK TO START IF NOT READY
	BRNC	CFWAIT
	
	; RETURN FROM FUNCTION CALL
	JUMPR	C



.DATA

.DEFL BYTE FNAME	0XFF,'0',"KERNEL","SV"