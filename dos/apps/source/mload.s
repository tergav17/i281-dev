; MLOAD.S
; MEDIA LOAD UTILITY
; GAVIN TERSTEEG, 2024
; SDMAY24-14

; SET START OF HEAP
HEAP	= BD

; BANK ALLOCATION STUFF
BI	= 1
BD	= 1

; MAXIMUM ARGUMENTS
MAXARGS	= 15

; MEDIA BASE
MEDBASE	= 1

; COMPACT FLASH REGISTERS
CF	= 0XA0		; COMPACT FLASH BASE ADDRESS
CF_DATA	= CF+0X00	; CF DATA
CF_ERR	= CF+0X01	; CF ERROR
CF_FEAT	= CF+0x01	; CF FEATURES
CF_CNT	= CF+0X02	; CF SECTOR COUNT
CF_LBA0	= CF+0X03	; CF LBA BITS 0-7
CF_LBA1	= CF+0X04	; CF LBA BITS 8-15
CF_LBA2	= CF+0X05	; CF LBA BITS 16-23
CF_LBA3	= CF+0X06	; CF LBA BITS 24-27
CF_STAT	= CF+0X07	; CF STATUS
CF_CMD	= CF+0X07	; CF COMMAND

; COMPACT FLASH COMMANDS
CF_WRIT = 0X30		; WRITE COMMAND

.TEXT
.BANK	BI
CORE0_B	= BI

	; START BY PROCESSING THE ARGUMENTS
START:	LOADI	A,0
	STORE	[DBANK],A
	
	; RESET ARG STATE
	STORE	[ARGC],A

	; SET UP STACK
	LOADI	D,0X60-2
	
	; SYSCALL RETURN BANK
	LOADI	C,BI
	STOREF	[D+1],C
	
	; SET UP POINTER
	LOADI	C,0
	
	; GO TO ARGUMENT BANK
0:	LOAD	A,[CMDL_B]
	STORE	[ARG_BNK],A
	STORE	[DBANK],A

	; SKIP THE CURRENT ARGUMENT
1:	LOADF	A,[C]
	LOADI	B,0X20
	CMP	A,B
	BRBE	2F
	ADDI	C,1
	JUMP	1B

	; LOOK FOR AN ARGUMENT
2:	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	CMP	A,B
	BRA	3F
	ADDI	C,1
	JUMP	2B

	; IS IT A FLAG?
3:	LOADI	B,'-'
	CMP	A,B
	BRNZ	5F
	
	; HANDLE FLAGS HERE	
4:	ADDI	C,1
	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	LOADI	B,0X20
	CMP	A,B
	BRBE	2B
	
	; REGISTER THE FLAG
	LOADI	B,0
	STORE	[DBANK],B
	
	; IS IT A RECOGNIZED FLAG?
	ADDI	B,0
	BRZ	ARGBAD
	LOADI	A,1
	STOREF	[B],A

	; THERE MAY BE ANOTHER FLAG
	LOAD	B,[CMDL_B]
	STORE	[ARG_BNK],B
	STORE	[DBANK],B
	JUMP	4B

	; SAVE THE ARGUMENT
5:	LOADI	B,0
	STORE	[DBANK],B
	LOAD	B,[ARGC]
	STOREF	[B+ARGV],C
	
	; DID WE EXCEED THE ALLOWED NUMBER OF ARGUMENTS
	SUBI	B,MAXARGS
	BRC	ARGBAD
	ADDI	B,MAXARGS+1
	STORE	[ARGC],B
	JUMP	0B
	
	; BAD ARGUMENT
ARGBAD:	LOADI	A,0
	STORE	[DBANK],A
	
	LOADI	A,ERR0_B
	STORE	[ARG_BNK],A
	LOADI	A,ERROR00
	
	; PRINT ERROR MESSAGE
PRNTERR:LOADI	C,BI
	STOREF	[D+1],C
	LOADI	B,S_PUTS
	LOADI	C,EXIT
	JUMP	SYSCALL	

	; EXIT PROGRAM
EXIT:	LOADI	B,0
	JUMP	SYSJUMP
	
	; ARGUMENT PROCESSING DONE
ARGDONE:LOADI	A,0
	STORE	[DBANK],A
	
	; CHECK ARG COUNT
	LOAD	A,[ARGC]
	ADDI	A,0
	BRZ	ARGBAD
	
	; RESET READ IN STATE
	LOADI	A,0
	STORE	[SECADDR],A
	STORE	[SECADDR+1],A
	
	; START LOADING
	LOADI	B,CORE1_B
	LOADI	C,DOLOAD
	JUMP	INDIR
	
	
BI	= BI+1
.TEXT
.BANK	BI
CORE1_B	= BI

	; START LOADING
	; START AT ARGUMENT ZERO
DOLOAD:	LOADI	A,0

	; OPEN NEXT FILE
0:	STORE	[CFILE],A
	LOAD	B,[CMDL_B]
	STORE	[ARG_BNK],B
	LOADF	A,[A+ARGV]
	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	B,S_OPEN
	LOADI	C,@+2
	JUMP	SYSCALL
	ADDI	A,0
	BRZ	1F
	
	; ERROR!
	LOADI	A,ERR0_B
	STORE	[ARG_BNK],A
	LOADI	A,ERROR01
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL
	LOADI	B,S_EXIT
	JUMP	SYSJUMP
	
	; PUT BLOCKS AT THE START OF THE HEAP
1:	LOADI	A,HEAP
	STORE	[ARG_BNK],A
	
	; START READING AT BLOCK ZERO
	LOADI	A,0

	; READ BLOCK
2:	STORE	[BLOCK],A
	LOADI	B,S_READ
	LOADI	C,@+2
	JUMP	SYSCALL
	ADDI	A,0
	BRNZ	6F
	
	; PLACE BLOCK INTO MEDIA BUFFER
	; SET COMPACT FLASH ADDRESS
	LOAD	B,[SECADDR+1]
	STORE	[CF_LBA0],B
	LOAD	B,[SECADDR]
	STORE	[CF_LBA1],B
	LOADI	B,MEDBASE
	STORE	[CF_LBA2],B
	LOADI	B,0XE0
	STORE	[CF_LBA3],B
	LOADI	B,1
	STORE	[CF_CNT],B
	
	; WAIT FOR PREVIOUS COMMAND TO END
	LOADI	C,@+2
	JUMP	CFWAIT
	
	; RUN WRITE COMMAND
	LOADI	A,CF_WRIT
	STORE	[CF_CMD],A
	LOADI	C,@+2
	JUMP	CFWAIT
	
	; GRAB FROM THE HEAP
	LOADI	C,HEAP
3:	STORE	[DBANK],C
	LOADI	B,0
4:	LOADF	A,[B]
	STORE	[CF_DATA],A
	ADDI	B,1
	BRNN	4B
	ADDI	C,1
	LOADI	A,HEAP+4
	CMP	A,C
	BRNZ	3B
	LOADI	A,0
	STORE	[DBANK],A
	
	; INCREMENT SECTOR ADDRESS
	LOAD	A,[SECADDR+1]
	ADDI	A,1
	STORE	[SECADDR+1],A
	BRNC	5F
	LOAD	A,[SECADDR]
	ADDI	A,1
	STORE	[SECADDR],A

	; INCREMENT CURRENT BLOCK
5:	LOAD	A,[BLOCK]
	ADDI	A,1
	BRNC	2B
	
	; NEXT FILE
6:	LOAD	A,[CFILE]
	LOAD	B,[ARGC]
	ADDI	A,1
	CMP	A,B
	BRNZ	0B

	; EXIT
	LOADI	B,S_EXIT
	JUMP	SYSJUMP
	
	; WAIT FOR THE CF CARD TO BECOME READY
	; FOR THIS TO HAPPEN, THE BUSY FLAG MUST BE 0
	; AND THE READY FLAG MUST BE 1
	; IF A CF CARD ISN'T PRESENT, THIS ROUTINE HANGS
	; BUT WE DON'T CARE
	; USES: B
CFWAIT:	LOAD	B,[CF_STAT]

	; CHECK BIT 7 (BUSY FLAG)
	SHIFTL	B
	
	; GO BACK TO START BUSY
	BRC	CFWAIT
	
	; CHECK BIT 6 (READY FLAG)
	SHIFTL	B
	
	; GO BACK TO START IF NOT READY
	BRNC	CFWAIT
	
	; RETURN FROM FUNCTION CALL
	JUMPR	C

	; ZERO BANK VARIABLES
.BANK	0
.BSS

	; COMMAND LINE ARGUMENTS
.DEFL BYTE ARGC		0
.DEFL BYTE ARGV		0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0

	; READ IN STATE
.DEFL WORD SECADDR	0
.DEFL BYTE BLOCK	0
.DEFL BYTE CFILE	0

	; VARIOUS MISC VARIABLES
	; TO BE USED IN LEAF-FUNCTIONS
.DEFL BYTE SPARK	0

	; ERROR BANK 0
.BANK	BD
.DATA
ERR0_B	= BD

	; INVALID ARGUMENTS
.DEFL BYTE ERROR00	"INVALID ARGUMENTS",0X0A,0X0D,
			"USAGE: MLOAD FILE1 FILE2 ...",0X0A,0X0D,0
.DEFL BYTE ERROR01	"CANNOT OPEN FILE",0X0A,0X0D,0

BD	= BD+1	