; AS0.S
; ASSEMBLER CORE
; GAVIN TERSTEEG, 2024
; SDMAY24-14

; BANK ALLOCATION STUFF
BI	= 1
BD	= 1

; MAXIMUM ARGUMENTS
MAXARGS	= 15

.TEXT
.BANK	BI
CORE0_B	= BI

	; START BY PROCESSING THE ARGUMENTS
START:	LOADI	A,0
	STORE	[DBANK],A
	
	; RESET ARG STATE
	STORE	[ARGC],A
	STORE	[LFLAG],A
	
	; SET UP STACK
	LOADI	D,0X60-2
	
	; SYSCALL RETURN BANK
	LOADI	C,1	
	STOREF	[D+1],C
	
	; SET UP POINTER
	LOADI	C,0
	
	; GO TO ARGUMENT BANK
0:	LOAD	A,[CMDL_B]
	STORE	[ARG_BNK],A
	STORE	[DBANK],A

	; SKIP THE CURRENT ARGUMENT
1:	LOADF	A,[C]
	LOADI	B,0X20
	CMP	A,B
	BRBE	2F
	ADDI	C,1
	JUMP	1B

	; LOOK FOR AN ARGUMENT
2:	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	CMP	A,B
	BRA	3F
	ADDI	C,1
	JUMP	2B

	; IS IT A FLAG?
3:	LOADI	B,'-'
	CMP	A,B
	BRNZ	5F
	
	; HANDLE FLAGS HERE	
4:	ADDI	C,1
	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	LOADI	B,0X20
	CMP	A,B
	BRBE	2B
	
	; REGISTER THE FLAG
	LOADI	B,0
	STORE	[DBANK],B
	
	SUBI	A,'L'
	BRNZ	@+2
	LOADI	B,LFLAG
	
	; IS IT A RECOGNIZED FLAG?
	ADDI	B,0
	BRZ	ARGBAD
	LOADI	A,1
	STOREF	[B],A

	; THERE MAY BE ANOTHER FLAG
	LOAD	B,[CMDL_B]
	STORE	[ARG_BNK],B
	STORE	[DBANK],B
	JUMP	4B

	; SAVE THE ARGUMENT
5:	LOADI	B,0
	STORE	[DBANK],B
	LOAD	B,[ARGC]
	STOREF	[B+ARGV],C
	
	; DID WE EXCEED THE ALLOWED NUMBER OF ARGUMENTS
	SUBI	B,MAXARGS
	BRC	ARGBAD
	ADDI	B,MAXARGS+1
	STORE	[ARGC],B
	JUMP	0B
	
	; BAD ARGUMENT
ARGBAD:	LOADI	A,0
	STORE	[DBANK],A
	
	LOADI	A,ERR0_B
	STORE	[ARG_BNK],A
	LOADI	A,ERROR00
	
	; PRINT ERROR MESSAGE
PRNTERR:LOADI	B,S_PUTS
	LOADI	C,EXIT
	JUMP	SYSCALL	

	; EXIT PROGRAM
EXIT:	LOADI	B,0
	JUMP	SYSJUMP
	
	; ARGUMENT PROCESSING DONE
ARGDONE:LOADI	A,0
	STORE	[DBANK],A
	
	; CHECK ARG COUNT
	LOAD	A,[ARGC]
	ADDI	A,0
	BRZ	ARGBAD
	
	; RESET PASS TO FIRST
	LOADI	A,0
	STORE	[PASS],A
	
	; BEGIN ASSEMBLY
	LOADI	B,CORE1_B
	LOADI	C,DOPASS
	JUMP	INDIR

	; EXIT PROGRAM
EXIT:	LOADI	B,S_EXIT
	JUMP	SYSJUMP
	
	; DO AN ERROR
ERROR:	LOADI	B,BI
	STOREF	[D+1],B
	JUMP	PRNTERR
	
BI	= BI+1
.TEXT
.BANK	BI
CORE1_B	= BI

	; START A PASS
	; BEGIN BY REWINDING THE SOURCE STREAM
DOPASS:	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,REWIND
	JUMP	INDIR

	; TAKE IN A NEW LINE OF SOURCE CODE
ASMLINE:LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,NEXTCHR
	JUMP	INDIR
	
	; ARE WE AT THE END?
	LOAD	A,[SRCCHAR]
	ADDI	A,0
	BRNZ	ASMLINE

	; ALL DONE
ASMDONE:LOADI	B,CORE0_B
	LOADI	C,EXIT
	JUMP	INDIR


	; ZERO BANK VARIABLES
.BANK	0
.BSS

	; COMMAND LINE ARGUMENTS
.DEFL BYTE ARGC		0
.DEFL BYTE ARGV		0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0

	; COMMAND LINE FLAGS
.DEFL BYTE LFLAG	0

	; LATEST TOKEN
.DEFL BYTE TOKEN	0

	; TOKEN STREAM STATE
.DEFL BYTE SRCINDX	0
.DEFL BYTE SRCBLK	0
.DEFL BYTE SRCBANK	0
.DEFL BYTE SRCPNTR	0
.DEFL BYTE SRCSTAT	0
.DEFL BYTE SRCCHAR	0

	; ASSEMBLY STATE
.DEFL BYTE PASS		0

	; ERROR BANKS
.BANK	BD
.DATA
ERR0_B	= BD

	; ERROR MESSAGES
.DEFL BYTE ERROR00	"INVALID ARGUMENTS",0X0A,0X0D,
			"USAGE: AS [-L] FILE1 FILE2 ...",0X0A,0X0D,0
.DEFL BYTE ERROR01	"CAN'T OPEN FILE",0X0A,0X0D,0

BD	= BD+1

	; SOURCE READ BUFFER
.BANK	BD
.DATA
SRC_B	= BD

BD	= BD+4