; DIR.S
; LIST FILES IN DIRECTORY

.BANK 1
.TEXT
	; START HERE
	; SET OUT BANK TO BANK 0
START:	LOADI	A,0
	STORE	[DBANK],A
	
	; SET UP STACK
	LOADI	D,0X60-2
	
	; FIRST ORDER OF BUISNESS: CLOSE EXISTING FILE
	
	; SET UP SYSTEM CALL ARGUMENTS
	LOADI	B,S_CLOSE
	
	; SET UP RETURN ADDRESS
	LOADI	C,1	; RETURN BANK
	STOREF	[D+1],C
	LOADI	C,@+2	; RETURN ADDRESS
	
	; AND DO SYSCALL
	JUMP	SYSCALL
	
	; NOW START THE SEARCH
	LOADI	A,1
	STORE	[ARG_BNK],A
	LOADI	A,PATH
	
	; SET THE SYSTEM CALL TYPE
	LOADI	B,S_FSRCH
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; PRINT HEADER
	LOADI	A,HEADER
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; PRINT THE FILE LISTING
PRINTFI:LOAD	A,[CF_USR]
	LOADI	B,1
	STORE	[DBANK],B
	STORE	[LSSTART],A
	LOADI	B,0
	STORE	[DBANK],B

	; PRINT OUT THE START OF THE LISTING
	LOADI	A,LSSTART
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL

	; START PRINTING OUT THE NAME PROPER
	LOADI	A,6
	STORE	[MAXIMUM],A
	LOADI	A,0
	
	; STORE THE COUNTER
0:	STORE	[COUNT],A

	; GET THE CHARACTER FROM THE NAME
	LOADF	A,[A+CF_NAME]
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL
	
	
	
	; DO WE COUNT UP?
	LOAD	A,[COUNT]
	LOAD	B,[MAXIMUM]
	ADDI	A,1
	CMP	A,B
	BRAE	1F
	JUMP	0B
	
	; EITHER PRINT A '.' OR MOVE ON TO THE NEXT FILE
1:	SUBI	A,8
	BRZ	FINISH
	
	; PRINT A '.'
	LOADI	A,'.'

	; SET THE SYSTEM CALL TYPE
	LOADI	B,S_PUTC
	
	; SET UP RETURN ADDRESS
	; AND DO SYSCALL
	LOADI	C,@+2
	JUMP	SYSCALL
	
	LOADI	A,8
	STORE	[MAXIMUM],A
	LOADI	A,6
	JUMP	0B
	
	
	; FINISH OFF THE FILE LISTING
FINISH:	LOADI	A,0x20
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; PRINT THE FILE SIZE
	LOADI	C,NEXT
	STOREF	[D],C
	LOADI	B,2
	LOADI	C,PRINTD
	JUMP	INDIR
	
	; GET THE NEXT FILE
	; PRINT NEW LINE
NEXT:	LOADI	A,CRLF
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; LOOK UP NEXT FILE
	LOADI	B,S_NEXT
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; CHECK TO SEE IF IT WORKED
	ADDI	A,0
	BRZ	PRINTFI

	; AND EXIT
END:	LOADI	B,0
	JUMP	SYSJUMP
	
.BANK	2
	
	; PRINTS THE SIZE AS A 8 OR 16 BIT BASE-10 NUMBER
	; A = 0: 8 BIT 1: 16 BIT
PRINTD: STOREF	[D],C
	SUBI	D,2
	
	; SET PADDING TO SPACE AT FIRST
	LOADI	C,0X20
	STORE	[PADDING],C
	
	; SEE IF WE ARE DOING 8 OR 16 BIT
	ADDI	A,0
	BRZ	0F
	
V	= 10000
	LOADI	A,V/256
	LOADI	B,V%256
	LOADI	C,@+2
	JUMP	DOCHAR
	
V	= 1000
	LOADI	A,V/256
	LOADI	B,V%256
	LOADI	C,@+2
	JUMP	DOCHAR
	
V	= 100
0:	LOADI	A,V/256
	LOADI	B,V%256
	LOADI	C,@+2
	JUMP	DOCHAR
	
V	= 10
	LOADI	A,V/256
	LOADI	B,V%256
	LOADI	C,@+2
	JUMP	DOCHAR
	
V	= 1
	LOADI	A,V/256
	LOADI	B,V%256
	LOADI	C,@+2
	JUMP	DOCHAR
	
	ADDI	D,2
	JUMP	IRET
	
	; A = UPPER SUB
	; B = LOWER SUB
DOCHAR:	STORE	[LEAFRET],C
	LOAD	C,[PADDING]	
	STORE	[CHAR],C

	; GET THE SIZE
0:	LOAD	C,[CF_SIZE]
	LOAD	D,[CF_SIZE+1]
	
	; DO 16 BIT SUBTRACTION
1:	SUB	D,B
	BRC	2F
	SUBI	C,1
	BRNC	4F
2:	SUB	C,A
	BRNC	4F
	
	; SAVE VALUE
	STORE	[CF_SIZE],C
	STORE	[CF_SIZE+1],D
	
	; GET THE CHAR AND CHECK TO SEE IF IT IS A SPACE
	LOAD	C,[CHAR]
	LOADI	D,0X20
	CMP	C,D
	BRNZ	3F
	
	; SET PADDING AND CHAR TO '0'
	LOADI	C,'0'
	STORE	[PADDING],C
	
3:	ADDI	C,1
	STORE	[CHAR],C
	JUMP	0B
	
	; PRINT THE CHARACTER
4:	LOAD	A,[CHAR]
	LOADI	B,S_PUTC
	LOADI	C,2	; RETURN BANK
	STOREF	[D+1],C
	LOAD	C,[LEAFRET]
	JUMP	SYSCALL
	


.DATA

	; CR / LF
.DEFL BYTE CRLF		0X0A,0X0D,0

	; FILE LISTING HEADER
.DEFL BYTE HEADER	"UA NAME   EX SIZE",0X0A,0X0D,0

	; FILE LIST START
.DEFL BYTE LSSTART	"0: ",0

	; PATH TO SEARCH FILES BY
.DEFL BYTE PATH		"*.*",0

.DEFL BYTE ERROR	"NO FILES",0X0A,0X0D,0


.BANK 0
.BSS
	; DEFINE SOME SPACE ON THE ZERO BANK FOR STATE INFORMATION

	; GENERAL PURPOSE COUNTER
.DEFL BYTE COUNT	0

	; COUNTER MAXIMUM
.DEFL BYTE MAXIMUM	0

	; VALUE FOR DECIMAL NUMBER PRINT
.DEFL BYTE CHAR		0

	; PADDING FOR DECIMAL NUMBER PRINT
.DEFL BYTE PADDING	0

	; RETURN FOR LEAF FUNCTIONS
.DEFL BYTE LEAFRET	0

	