; AS1.S
; ASSEMBLER MAIN LOGIC
; GAVIN TERSTEEG, 2024
; SDMAY24-14

BI	= BI+1
.TEXT
.BANK	BI
MAIN0_B	= BI

	; START A PASS
	; BEGIN BY REWINDING THE SOURCE STREAM
DOPASS:	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,REWIND
	JUMP	INDIR
	
	; RESET LOCAL COUNTER
	LOADI	A,0
	STORE	[NUMLOC],A

	; TAKE IN A NEW LINE OF SOURCE CODE
ASMLINE:LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,NEXTTOK
	JUMP	INDIR
	
	; ARE WE AT THE END?
	LOAD	A,[TOKEN]
	ADDI	A,0
	BRZ	ASMDONE
	
	; IS IT NEWLINE?
	SUBI	A,NEWLINE
	BRZ	ASMLINE
	
	; IS IT A SYMBOL?
	SUBI	A,SYMBOL-NEWLINE
	LOADI	B,MAIN1_B
	LOADI	C,ASMSYM
	BRZ	INDIR
	
	; IS IT A NUMERIC?
	SUBI	A,SYMBOL-NEWLINE
	LOADI	B,MAIN2_B
	LOADI	C,ASMNUM
	BRZ	INDIR
	
	JUMP	ASMLINE
	

	; ALL DONE
ASMDONE:LOADI	A,'A'
	STORE	[TBUF],A
	LOADI	A,0
	STORE	[TBUF+1],A

	; PRINT SOME DEBUGGING STUFF
	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	A,'A'
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL
	LOADI	A,'='
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; GET 'A' SYMBOL
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,SYM0_B
	LOADI	C,GETSYM
	JUMP	INDIR
	ADDI	A,0
	BRNZ	1F
	
	; PRINT VALUE
	LOADI	C,2F
	STOREF	[D],C
	LOADI	B,PRNT0_B
	LOADI	C,PRINTD
	JUMP	INDIR
	
	; UNDEFINED
1:	LOADI	A,'?'
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL

	; EXIT
2:	LOADI	B,CORE0_B
	LOADI	C,EXIT
	JUMP	INDIR
	
BI	= BI+1
.TEXT
.BANK	BI
MAIN1_B	= BI
	
	; LINE STARTS WITH A SYMBOL
	; ATTEMPT TO DEFINE THIS SYMBOL
ASMSYM:	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,SYM0_B
	LOADI	C,DEFINE
	JUMP	INDIR
	
	; CONSUME '=' SYMBOL
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,NEXTTOK
	JUMP	INDIR
	LOAD	A,[TOKEN]
	SUBI	A,'='
	BRZ	1F
	
	; ERROR!
	LOADI	A,E_UXTOK
	LOADI	B,CORE0_B
	LOADI	C,ERROR
	JUMP	INDIR

	; ATTEMPT TO PARSE EXPRESSION
1:	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,TOK0_B
	LOADI	C,NEXTTOK
	JUMP	INDIR
	
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,EXP0_B
	LOADI	C,PARSEX
	JUMP	INDIR
	
	; DID THE EXPRESSION RETURN DEFINED?
	ADDI	A,0
	BRNZ	2F

	; STORE VALUE AND DEFINE
	STORE	[SPARK],D
	LOAD	A,[VALUE]
	LOAD	B,[VALUE+1]
	LOAD	C,[DFBANK]
	LOAD	D,[DFPNTR]
	STORE	[DBANK],C
	STOREF	[D+1],A
	STOREF	[D+2],B
	LOADI	A,0XFF
	STOREF	[D],A
	LOADI	A,0
	STORE	[DBANK],A
	LOAD	D,[SPARK]
	
	JUMP	9F

	; UN-DEFINE THE EXPRESSION
2:	LOADI	A,0
	LOAD	B,[DFBANK]
	LOAD	C,[DFPNTR]
	STORE	[DBANK],B
	STOREF	[C],A
	STORE	[DBANK],A
	JUMP	9F
	
	; GO BACK TO ASMLINE
9:	LOADI	B,MAIN0_B
	LOADI	C,ASMLINE
	JUMP	INDIR
	
BI	= BI+1
.TEXT
.BANK	BI
MAIN2_B	= BI

	; LINE STARTS WITH A NUMERIC
	; ATTEMPT TO DEFINE A LOCAL SYMBOL
ASMNUM:	LOADI	C,BI
	STOREF	[D+1],C
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,EXP0_B
	LOADI	C,PARSEN
	JUMP	INDIR
	
	; MAKE SURE IT IS LESS THAN 10
	LOAD	A,[VALUE]
	ADDI	A,0
	BRNZ	1F
	LOAD	A,[VALUE+1]
	LOADI	B,10
	CMP	A,B
	BRB	2F

	; ERROR!
1:	LOADI	A,E_LOBIG
	LOADI	B,CORE0_B
	LOADI	C,ERROR
	JUMP	INDIR

	; NOW LETS DEFINE IT
2:	ADDI	A,'0'
	
	; GO BACK TO ASMLINE
9:	LOADI	B,MAIN0_B
	LOADI	C,ASMLINE
	JUMP	INDIR