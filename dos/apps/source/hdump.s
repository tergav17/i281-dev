; HDUMP.S
; DUMP OUT FILE BLOCKS IN HEXADEMIMAL FORMAT

; MAXIMUM ARGUMENTS
MAXARGS	= 3

; BLOCK BUFFER
BUFFER	= 2


	; START BY PROCESSING THE ARGUMENTS
START:	LOADI	A,0
	STORE	[DBANK],A
	
	; RESET ARG STATE
	STORE	[ARGC],A
	
	; SET UP STACK
	LOADI	D,0X60-2
	
	; SYSCALL RETURN BANK
	LOADI	C,1	
	STOREF	[D+1],C
	
	; SET UP POINTER
	LOADI	C,0
	
	; GO TO ARGUMENT BANK
0:	LOAD	A,[CMDL_B]
	STORE	[ARG_BNK],A
	STORE	[DBANK],A

	; SKIP THE CURRENT ARGUMENT
1:	LOADF	A,[C]
	LOADI	B,0X20
	CMP	A,B
	BRBE	2F
	ADDI	C,1
	JUMP	1B

	; LOOK FOR AN ARGUMENT
2:	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	CMP	A,B
	BRA	3F
	ADDI	C,1
	JUMP	2B

	; IS IT A FLAG?
3:	LOADI	B,'-'
	CMP	A,B
	BRNZ	5F
	
	; HANDLE FLAGS HERE	
4:	ADDI	C,1
	LOADF	A,[C]
	ADDI	A,0
	BRZ	ARGDONE
	LOADI	B,0X20
	CMP	A,B
	BRBE	2B
	
	; REGISTER THE FLAG
	LOADI	B,0
	STORE	[DBANK],B
	
	; IS IT A RECOGNIZED FLAG?
	ADDI	B,0
	BRZ	ARGBAD
	LOADI	A,1
	STOREF	[B],A

	; THERE MAY BE ANOTHER FLAG
	LOAD	B,[CMDL_B]
	STORE	[ARG_BNK],B
	STORE	[DBANK],B
	JUMP	4B

	; SAVE THE ARGUMENT
5:	LOADI	B,0
	STORE	[DBANK],B
	LOAD	B,[ARGC]
	STOREF	[B+ARGV],C
	
	; DID WE EXCEED THE ALLOWED NUMBER OF ARGUMENTS
	SUBI	B,MAXARGS
	BRC	ARGBAD
	ADDI	B,MAXARGS+1
	STORE	[ARGC],B
	JUMP	0B
	
	; BAD ARGUMENT
ARGBAD:	LOADI	A,0
	STORE	[DBANK],A
	
	LOADI	A,STR_B
	STORE	[ARG_BNK],A
	LOADI	A,ERROR0
	
	; PRINT ERROR MESSAGE
	LOADI	B,S_PUTS
	LOADI	C,EXIT
	JUMP	SYSCALL	

	; EXIT PROGRAM
EXIT:	LOADI	B,0
	JUMP	SYSJUMP
	
	; ARGUMENT PROCESSING DONE
ARGDONE:LOADI	A,0
	STORE	[DBANK],A
	
	; SET DEFAULT BLOCK RANGES
	STORE	[BLOCK],A
	LOADI	A,255
	STORE	[ENDBLK],A
	
	; CHECK ARG COUNT
	LOAD	A,[ARGC]
	ADDI	A,0
	BRZ	ARGBAD
	SUBI	A,1
	BRZ	9F
	
	; PROCESS FIRST NUMBER
	LOAD	C,[ARGV+1]
	LOADI	A,@+3
	STOREF	[D],A
	JUMP	CONVARG
	
	; STORE IN AS START AND END
	STORE	[BLOCK],A
	STORE	[ENDBLK],A
	
	; CHECK ARG COUNT
	LOAD	A,[ARGC]
	SUBI	A,2
	BRZ	9F
	
	; PROCESS SECOND NUMBER
	LOAD	C,[ARGV+2]
	LOADI	A,@+3
	STOREF	[D],A
	JUMP	CONVARG
	
	; STORE IN END
	STORE	[ENDBLK],A
	
	; ALSO CHECK TO MAKE SURE BOUNDS ARE VALID
	LOAD	B,[BLOCK]
	CMP	A,B
	BRB	ARGBAD
	
	; CHECK ARG COUNT
	LOAD	A,[ARGC]
	SUBI	A,3
	BRNZ	ARGBAD
	
	; WE HAVE OUR RANGES, LETS START DUMPING
9:	LOADI	B,DUMP_B
	LOADI	C,DUMP
	JUMP	INDIR

	; CONVERT AN ARGUMENT FROM TEXT TO DECIMAL
	; C = POINTER TO STRING
	; VALUE RETURNED IN A
CONVARG:LOADI	A,0

	; GET A CHARACTER
	LOAD	B,[CMDL_B]
	STORE	[DBANK],B
0:	LOADF	B,[C]
	SUBI	B,0X20
	BRBE	1F
	SUBI	B,'0'-0X20
	BRB	ARGBAD
	SUBI	B,10
	BRAE	ARGBAD
	
	; MULTIPLY A BY 10
	MOV	B,A
	SHIFTL	A
	BRC	ARGBAD
	SHIFTL	A
	BRC	ARGBAD
	SHIFTL	A
	BRC	ARGBAD
	ADD	A,B
	BRC	ARGBAD
	ADD	A,B
	BRC	ARGBAD
	
	; ADD CHARACTER TO A 
	LOADF	B,[C]
	SUBI	B,'0'
	ADD	A,B
	BRC	ARGBAD
	
	; INCREMENT AND REPEAT
	ADDI	C,1
	JUMP	0B
	
	; WE ARE DONE, RETURN
1:	LOADI	B,0
	STORE	[DBANK],B
	JUMP	IRET
	
	
	; EXIT PROGRAM
EXIT:	LOADI	B,0
	JUMP	SYSJUMP
	
.TEXT
.BANK	2
DUMP_B	= 2
	
	; MAIN DUMP OPERATION
	; SYSCALL RETURN BANK
DUMP:	LOADI	C,2	
	STOREF	[D+1],C
	
	; OPEN THE FILE
	LOAD	A,[CMDL_B]
	STORE	[ARG_BNK],A
	LOAD	A,[ARGV]
	LOADI	B,S_OPEN
	LOADI	C,@+2
	JUMP	SYSCALL
	ADDI	A,0
	BRZ	READB
	
	; ERROR!
	LOADI	A,STR_B
	STORE	[ARG_BNK],A
	LOADI	A,ERROR1
	LOADI	B,S_PUTS
	LOADI	C,9F
	JUMP	SYSCALL
	
	; SET ARG_BNK
READB:	LOADI	C,2	
	STOREF	[D+1],C
	LOADI	A,BUFFER
	STORE	[ARG_BNK],A

	; READ THE BLOCK
	LOAD	A,[BLOCK]
	LOADI	B,S_READ
	LOADI	C,@+2
	JUMP	SYSCALL
	ADDI	A,0
	BRNZ	9F
	
	; RESET BANK
	LOADI	A,BUFFER
	STORE	[BANK],A
	
	; RESET POINTER
	LOADI	A,0
	STORE	[POINTER],A
	
	; RESET COUNTB
PHEAD:	LOADI	B,8
	STORE	[COUNTB],B
	
	; PRINT OFF HEADER
	LOAD	B,[BLOCK]
	SHIFTL	B
	LOADI	A,1
	BRC	@+2
	LOADI	A,0
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,PRINT_B
	LOADI	C,PNYBBLE
	JUMP	INDIR
	
	LOAD	A,[BLOCK]
	SHIFTL	A
	LOAD	B,[BANK]
	SUBI	B,BUFFER+2
	BRB	@+2
	ADDI	A,1
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,PRINT_B
	LOADI	C,PBYTE
	JUMP	INDIR
	
	LOAD	A,[POINTER]
	LOAD	B,[BANK]
	SUBI	B,BUFFER
	SHIFTR	B
	BRNC	@+2
	ADDI	A,0X80
	LOADI	C,@+5
	STOREF	[D],C
	LOADI	B,PRINT_B
	LOADI	C,PBYTE
	JUMP	INDIR
	
	; PRINT THE ": "
	LOADI	A,STR_B
	STORE	[ARG_BNK],A
	LOADI	A,HEADER
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; PRINT THE REST OF THE LINE
	LOADI	B,PRINT_B
	LOADI	C,DOPRINT
	JUMP	INDIR
	
	; END OF OPERATION
9:	LOADI	B,1
	LOADI	C,EXIT
	JUMP	INDIR
	
.TEXT
.BANK	3
PRINT_B	= 3
	
	; PREPARE TO PRINT
DOPRINT:LOADI	C,3	
	STOREF	[D+1],C
0:	LOADI	A,4
	STORE	[COUNTA],A

	; PRINT A BYTE
1:	LOAD	B,[POINTER]
	LOAD	C,[BANK]
	STORE	[DBANK],C
	LOADF	A,[B]
	LOADI	C,0
	STORE	[DBANK],C
	LOADI	C,@+3
	STOREF	[D],C
	JUMP	PBYTE
	
	; INCREMENT POINTER AND DECREMENT COUNTER A
	LOAD	B,[POINTER]
	ADDI	B,1
	STORE	[POINTER],B
	BRN	3F
	LOAD	A,[COUNTA]
	SUBI	A,1
	STORE	[COUNTA],A
	BRNZ	1B
	
	; PRINT A SPACE
	LOADI	A,0X20
	LOADI	B,S_PUTC
	LOADI	C,@+2
	JUMP	SYSCALL
	
	; DECREMENT COUNTER B
	LOAD	A,[COUNTB]
	SUBI	A,1
	STORE	[COUNTB],A
	BRNZ	0B

	; PRINT A CRLF
2:	LOADI	C,DUMP_B
	STOREF	[D+1],C
	LOADI	A,CRLF
	LOADI	B,S_PUTS
	LOADI	C,PHEAD
	JUMP	SYSCALL

	; MOVE UP A BANK
3:	LOADI	A,0
	STORE	[POINTER],A
	LOAD	A,[BANK]
	SUBI	A,BUFFER+3
	BRZ	4F
	ADDI	A,BUFFER+4
	STORE	[BANK],A
	JUMP	2B

	; WE ARE DONE WITH THIS BLOCK
4:	LOADI	A,CRLF
	LOADI	B,S_PUTS
	LOADI	C,@+2
	JUMP	SYSCALL
	LOAD	A,[BLOCK]
	LOAD	B,[ENDBLK]
	CMP	A,B
	BRZ	9F
	ADDI	A,1
	STORE	[BLOCK],A
	LOADI	B,DUMP_B
	LOADI	C,READB
	JUMP	INDIR
	
	
	; PRINT A BYTE
	; A = BYTE TO PRINT
PBYTE:	SUBI	D,2
	STORE	[TEMP],A
	SHIFTR	A
	SHIFTR	A
	SHIFTR	A
	SHIFTR	A
	LOADI	C,PRINT_B
	STOREF	[D+1],C
	LOADI	C,@+3
	STOREF	[D],C
	JUMP	PNYBBLE
	ADDI	D,2
	LOAD	A,[TEMP]
	LOADI	B,16
0:	CMP	A,B
	BRB	PNYBBLE
	SUBI	A,16
	JUMP	0B
	
	; PUT A NYBBLE ON THE TERMINAL
	; A = NYBBLE TO OUTPUT
PNYBBLE:LOADI	B,10
	CMP	A,B
	BRB	0F
	ADDI	A,'A'-'0'-10
0:	ADDI	A,'0'
	LOADI	B,S_PUTC
	JUMP	SYSJUMP
	
	
	; END OF OPERATION
9:	LOADI	B,1
	LOADI	C,EXIT
	JUMP	INDIR
	

.DATA
.BANK	1
STR_B	= 1

	; ERROR MESSAGES
.DEFL BYTE ERROR0	"INVALID ARGUMENTS",0X0A,0X0D,
			"USAGE: HDUMP FILE {START BLK} {END BLK}",0X0A,0X0D,0
.DEFL BYTE ERROR1	"CAN'T OPEN FILE"
.DEFL BYTE CRLF		0X0A,0X0D,0
.DEFL BYTE HEADER	": ",0

.BANK	0
.BSS

	; COMMAND LINE ARGUMENTS
.DEFL BYTE ARGC		0
.DEFL BYTE ARGV		0,0,0,0

	; VARIOUS COUNTERS
.DEFL BYTE COUNTA	0
.DEFL BYTE COUNTB	0

	; INFORMATION ON WHAT CHARACTER IS BEING PRINTED
.DEFL BYTE POINTER	0
.DEFL BYTE BANK		0
.DEFL BYTE BLOCK	0
.DEFL BYTE ENDBLK	0


	; TEMPORARY VALUES
.DEFL BYTE TEMP		0