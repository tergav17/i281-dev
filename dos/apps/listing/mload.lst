00/00:          ; DOSDEF.S
01/80:          ; THIS FILE CONTAINS IMPORTANT DEFINES USED IN DOS/281
01/80:          ; GAVIN TERSTEEG, 2024
01/80:          ; SDMAY24-14
01/80:          
01/80:          ; BIOS CALLS
01/80:          BOOT	= 0
01/80:          ALTBOOT = 1
01/80:          INDIR	= 2
01/80:          IRET	= 3
01/80:          SYSCALL	= 4
01/80:          SYSJUMP	= 5
01/80:          PRGM	= 6
01/80:          IWRITE	= 7
01/80:          ZSTART	= 8
01/80:          
01/80:          HALT	= 0X7F
01/80:          
01/80:          ; SYSTEM CALLS
01/80:          S_EXIT	= 0
01/80:          S_PUTC	= 1
01/80:          S_GETC	= 2
01/80:          S_STAT	= 3
01/80:          S_PUTS	= 4
01/80:          S_INPUT	= 5
01/80:          S_OPEN	= 6
01/80:          S_CLOSE	= 7
01/80:          S_READ	= 8
01/80:          S_WRITE	= 9
01/80:          S_FSRCH	= 10
01/80:          S_NEXT	= 11
01/80:          S_DELET	= 12
01/80:          S_CREAT	= 13
01/80:          S_FREE	= 14
01/80:          S_EXEC	= 15
01/80:          S_PRNTC	= 16
01/80:          S_PSTAT	= 17
01/80:          
01/80:          ; MEMORY AREAS
01/80:          CF_NAME	= 0X60
01/80:          CF_SIZE	= 0X68
01/80:          CF_USR	= 0X6A
01/80:          DFT_USR	= 0X6B
01/80:          ARG_BNK	= 0X6C
01/80:          BD_FREE	= 0X6E
01/80:          MAX_IB	= 0X70
01/80:          MAX_DB	= 0X71
01/80:          CMDL_B	= 0X72
01/80:          AUTO_B	= 0X73
01/80:          KERNMEM	= 0X78
01/80:          BIOSMEM	= 0X7C
01/80:          AU_RUN	= 0X00
01/80:          AU_PNTR	= 0X01
01/80:          AU_BANK	= 0X02
01/80:          AU_BLK	= 0X03
01/80:          AU_UA	= 0X04
01/80:          AU_FILE	= 0X06
01/80:          AU_MISC	= 0X18
01/80:          
01/80:          ; DATA BANK ADDRESS
01/80:          DBANK	= 0X80		
01/80:          
01/80:          
01/80:          ; MLOAD.S
01/80:          ; MEDIA LOAD UTILITY
01/80:          ; GAVIN TERSTEEG, 2024
01/80:          ; SDMAY24-14
01/80:          
01/80:          ; SET START OF HEAP
01/80:          HEAP	= BD
01/80:          
01/80:          ; BANK ALLOCATION STUFF
01/80:          BI	= 1
01/80:          BD	= 1
01/80:          
01/80:          ; MAXIMUM ARGUMENTS
01/80:          MAXARGS	= 15
01/80:          
01/80:          ; MEDIA BASE
01/80:          MEDBASE	= 1
01/80:          
01/80:          ; COMPACT FLASH REGISTERS
01/80:          CF	= 0XA0		; COMPACT FLASH BASE ADDRESS
01/80:          CF_DATA	= CF+0X00	; CF DATA
01/80:          CF_ERR	= CF+0X01	; CF ERROR
01/80:          CF_FEAT	= CF+0x01	; CF FEATURES
01/80:          CF_CNT	= CF+0X02	; CF SECTOR COUNT
01/80:          CF_LBA0	= CF+0X03	; CF LBA BITS 0-7
01/80:          CF_LBA1	= CF+0X04	; CF LBA BITS 8-15
01/80:          CF_LBA2	= CF+0X05	; CF LBA BITS 16-23
01/80:          CF_LBA3	= CF+0X06	; CF LBA BITS 24-27
01/80:          CF_STAT	= CF+0X07	; CF STATUS
01/80:          CF_CMD	= CF+0X07	; CF COMMAND
01/80:          
01/80:          ; COMPACT FLASH COMMANDS
01/80:          CF_WRIT = 0X30		; WRITE COMMAND
01/80:          
01/80:          .TEXT
01/80:          .BANK	BI
01/80:          CORE0_B	= BI
01/80:          
01/80:          	; START BY PROCESSING THE ARGUMENTS
01/80: 3000     START:	LOADI	A,0
01/81: A080     	STORE	[DBANK],A
01/83:          	
01/82:          	; RESET ARG STATE
01/82: A000     	STORE	[ARGC],A
01/84:          
01/83:          	; SET UP STACK
01/83: 3C5E     	LOADI	D,0X60-2
01/85:          	
01/84:          	; SYSCALL RETURN BANK
01/84: 3801     	LOADI	C,BI
01/85: BB01     	STOREF	[D+1],C
01/87:          	
01/86:          	; SET UP POINTER
01/86: 3800     	LOADI	C,0
01/88:          	
01/87:          	; GO TO ARGUMENT BANK
01/87: 8072     0:	LOAD	A,[CMDL_B]
01/88: A06C     	STORE	[ARG_BNK],A
01/89: A080     	STORE	[DBANK],A
01/8B:          
01/8A:          	; SKIP THE CURRENT ARGUMENT
01/8A: 9200     1:	LOADF	A,[C]
01/8B: 3420     	LOADI	B,0X20
01/8C: D100     	CMP	A,B
01/8D: F902     	BRBE	2F
01/8E: 5801     	ADDI	C,1
01/8F: FFFA     	JUMP	1B
01/91:          
01/90:          	; LOOK FOR AN ARGUMENT
01/90: 9200     2:	LOADF	A,[C]
01/91: 5000     	ADDI	A,0
01/92: F62D     	BRZ	ARGDONE
01/93: D100     	CMP	A,B
01/94: F802     	BRA	3F
01/95: 5801     	ADDI	C,1
01/96: FFF9     	JUMP	2B
01/98:          
01/97:          	; IS IT A FLAG?
01/97: 342D     3:	LOADI	B,'-'
01/98: D100     	CMP	A,B
01/99: F711     	BRNZ	5F
01/9B:          	
01/9A:          	; HANDLE FLAGS HERE	
01/9A: 5801     4:	ADDI	C,1
01/9B: 9200     	LOADF	A,[C]
01/9C: 5000     	ADDI	A,0
01/9D: F622     	BRZ	ARGDONE
01/9E: 3420     	LOADI	B,0X20
01/9F: D100     	CMP	A,B
01/A0: F9EF     	BRBE	2B
01/A2:          	
01/A1:          	; REGISTER THE FLAG
01/A1: 3400     	LOADI	B,0
01/A2: A480     	STORE	[DBANK],B
01/A4:          	
01/A3:          	; IS IT A RECOGNIZED FLAG?
01/A3: 5400     	ADDI	B,0
01/A4: F60F     	BRZ	ARGBAD
01/A5: 3001     	LOADI	A,1
01/A6: B100     	STOREF	[B],A
01/A8:          
01/A7:          	; THERE MAY BE ANOTHER FLAG
01/A7: 8472     	LOAD	B,[CMDL_B]
01/A8: A46C     	STORE	[ARG_BNK],B
01/A9: A480     	STORE	[DBANK],B
01/AA: FFEF     	JUMP	4B
01/AC:          
01/AB:          	; SAVE THE ARGUMENT
01/AB: 3400     5:	LOADI	B,0
01/AC: A480     	STORE	[DBANK],B
01/AD: 8400     	LOAD	B,[ARGC]
01/AE: B901     	STOREF	[B+ARGV],C
01/B0:          	
01/AF:          	; DID WE EXCEED THE ALLOWED NUMBER OF ARGUMENTS
01/AF: 740F     	SUBI	B,MAXARGS
01/B0: F003     	BRC	ARGBAD
01/B1: 5410     	ADDI	B,MAXARGS+1
01/B2: A400     	STORE	[ARGC],B
01/B3: FFD3     	JUMP	0B
01/B5:          	
01/B4:          	; BAD ARGUMENT
01/B4: 3000     ARGBAD:	LOADI	A,0
01/B5: A080     	STORE	[DBANK],A
01/B7:          	
01/B6: 3001     	LOADI	A,ERR0_B
01/B7: A06C     	STORE	[ARG_BNK],A
01/B8: 3000     	LOADI	A,ERROR00
01/BA:          	
01/B9:          	; PRINT ERROR MESSAGE
01/B9: 3801     PRNTERR:LOADI	C,BI
01/BA: BB01     	STOREF	[D+1],C
01/BB: 3404     	LOADI	B,S_PUTS
01/BC: 38BE     	LOADI	C,EXIT
01/BD: FF46     	JUMP	SYSCALL	
01/BF:          
01/BE:          	; EXIT PROGRAM
01/BE: 3400     EXIT:	LOADI	B,0
01/BF: FF45     	JUMP	SYSJUMP
01/C1:          	
01/C0:          	; ARGUMENT PROCESSING DONE
01/C0: 3000     ARGDONE:LOADI	A,0
01/C1: A080     	STORE	[DBANK],A
01/C3:          	
01/C2:          	; CHECK ARG COUNT
01/C2: 8000     	LOAD	A,[ARGC]
01/C3: 5000     	ADDI	A,0
01/C4: F6EF     	BRZ	ARGBAD
01/C6:          	
01/C5:          	; RESET READ IN STATE
01/C5: 3000     	LOADI	A,0
01/C6: A011     	STORE	[SECADDR],A
01/C7: A012     	STORE	[SECADDR+1],A
01/C9:          	
01/C8:          	; START LOADING
01/C8: 3402     	LOADI	B,CORE1_B
01/C9: 3880     	LOADI	C,DOLOAD
01/CA: FF37     	JUMP	INDIR
01/CC:          	
01/CB:          	
01/CB:          BI	= BI+1
01/CB:          .TEXT
01/CB:          .BANK	BI
02/80:          CORE1_B	= BI
02/80:          
02/80:          	; START LOADING
02/80:          	; START AT ARGUMENT ZERO
02/80: 3000     DOLOAD:	LOADI	A,0
02/82:          
02/81:          	; OPEN NEXT FILE
02/81: A014     0:	STORE	[CFILE],A
02/82: 8472     	LOAD	B,[CMDL_B]
02/83: A46C     	STORE	[ARG_BNK],B
02/84: 9001     	LOADF	A,[A+ARGV]
02/85: 3802     	LOADI	C,BI
02/86: BB01     	STOREF	[D+1],C
02/87: 3406     	LOADI	B,S_OPEN
02/88: 388A     	LOADI	C,@+2
02/89: FF7A     	JUMP	SYSCALL
02/8A: 5000     	ADDI	A,0
02/8B: F608     	BRZ	1F
02/8D:          	
02/8C:          	; ERROR!
02/8C: 3001     	LOADI	A,ERR0_B
02/8D: A06C     	STORE	[ARG_BNK],A
02/8E: 3032     	LOADI	A,ERROR01
02/8F: 3404     	LOADI	B,S_PUTS
02/90: 3892     	LOADI	C,@+2
02/91: FF72     	JUMP	SYSCALL
02/92: 3400     	LOADI	B,S_EXIT
02/93: FF71     	JUMP	SYSJUMP
02/95:          	
02/94:          	; PUT BLOCKS AT THE START OF THE HEAP
02/94: 3002     1:	LOADI	A,HEAP
02/95: A06C     	STORE	[ARG_BNK],A
02/97:          	
02/96:          	; START READING AT BLOCK ZERO
02/96: 3000     	LOADI	A,0
02/98:          
02/97:          	; READ BLOCK
02/97: A013     2:	STORE	[BLOCK],A
02/98: 3408     	LOADI	B,S_READ
02/99: 389B     	LOADI	C,@+2
02/9A: FF69     	JUMP	SYSCALL
02/9B: 5000     	ADDI	A,0
02/9C: F727     	BRNZ	6F
02/9E:          	
02/9D:          	; PLACE BLOCK INTO MEDIA BUFFER
02/9D:          	; SET COMPACT FLASH ADDRESS
02/9D: 8412     	LOAD	B,[SECADDR+1]
02/9E: A4A3     	STORE	[CF_LBA0],B
02/9F: 8411     	LOAD	B,[SECADDR]
02/A0: A4A4     	STORE	[CF_LBA1],B
02/A1: 3401     	LOADI	B,MEDBASE
02/A2: A4A5     	STORE	[CF_LBA2],B
02/A3: 34E0     	LOADI	B,0XE0
02/A4: A4A6     	STORE	[CF_LBA3],B
02/A5: 3401     	LOADI	B,1
02/A6: A4A2     	STORE	[CF_CNT],B
02/A8:          	
02/A7:          	; WAIT FOR PREVIOUS COMMAND TO END
02/A7: 38A9     	LOADI	C,@+2
02/A8: FF22     	JUMP	CFWAIT
02/AA:          	
02/A9:          	; RUN WRITE COMMAND
02/A9: 3030     	LOADI	A,CF_WRIT
02/AA: A0A7     	STORE	[CF_CMD],A
02/AB: 38AD     	LOADI	C,@+2
02/AC: FF1E     	JUMP	CFWAIT
02/AE:          	
02/AD:          	; GRAB FROM THE HEAP
02/AD: 3802     	LOADI	C,HEAP
02/AE: A880     3:	STORE	[DBANK],C
02/AF: 3400     	LOADI	B,0
02/B0: 9100     4:	LOADF	A,[B]
02/B1: A0A0     	STORE	[CF_DATA],A
02/B2: 5401     	ADDI	B,1
02/B3: F5FC     	BRNN	4B
02/B4: 5801     	ADDI	C,1
02/B5: 3006     	LOADI	A,HEAP+4
02/B6: D200     	CMP	A,C
02/B7: F7F6     	BRNZ	3B
02/B8: 3000     	LOADI	A,0
02/B9: A080     	STORE	[DBANK],A
02/BB:          	
02/BA:          	; INCREMENT SECTOR ADDRESS
02/BA: 8012     	LOAD	A,[SECADDR+1]
02/BB: 5001     	ADDI	A,1
02/BC: A012     	STORE	[SECADDR+1],A
02/BD: F103     	BRNC	5F
02/BE: 8011     	LOAD	A,[SECADDR]
02/BF: 5001     	ADDI	A,1
02/C0: A011     	STORE	[SECADDR],A
02/C2:          
02/C1:          	; INCREMENT CURRENT BLOCK
02/C1: 8013     5:	LOAD	A,[BLOCK]
02/C2: 5001     	ADDI	A,1
02/C3: F1D3     	BRNC	2B
02/C5:          	
02/C4:          	; NEXT FILE
02/C4: 8014     6:	LOAD	A,[CFILE]
02/C5: 8400     	LOAD	B,[ARGC]
02/C6: 5001     	ADDI	A,1
02/C7: D100     	CMP	A,B
02/C8: F7B8     	BRNZ	0B
02/CA:          
02/C9:          	; EXIT
02/C9: 3400     	LOADI	B,S_EXIT
02/CA: FF3A     	JUMP	SYSJUMP
02/CC:          	
02/CB:          	; WAIT FOR THE CF CARD TO BECOME READY
02/CB:          	; FOR THIS TO HAPPEN, THE BUSY FLAG MUST BE 0
02/CB:          	; AND THE READY FLAG MUST BE 1
02/CB:          	; IF A CF CARD ISN'T PRESENT, THIS ROUTINE HANGS
02/CB:          	; BUT WE DON'T CARE
02/CB:          	; USES: B
02/CB: 84A7     CFWAIT:	LOAD	B,[CF_STAT]
02/CD:          
02/CC:          	; CHECK BIT 7 (BUSY FLAG)
02/CC: 4500     	SHIFTL	B
02/CE:          	
02/CD:          	; GO BACK TO START BUSY
02/CD: F0FD     	BRC	CFWAIT
02/CF:          	
02/CE:          	; CHECK BIT 6 (READY FLAG)
02/CE: 4500     	SHIFTL	B
02/D0:          	
02/CF:          	; GO BACK TO START IF NOT READY
02/CF: F1FB     	BRNC	CFWAIT
02/D1:          	
02/D0:          	; RETURN FROM FUNCTION CALL
02/D0: FE2F     	JUMPR	C
02/D2:          
02/D1:          	; ZERO BANK VARIABLES
02/D1:          .BANK	0
00/80:          .BSS
00/80:          
00/00:          	; COMMAND LINE ARGUMENTS
00/00: 00       .DEFL BYTE ARGC		0
00/01: 00000000
       00000000 .DEFL BYTE ARGV		0,0,0,0,0,0,0,0,
00/09: 00000000
       00000000 			0,0,0,0,0,0,0,0
00/11:          
00/11:          	; READ IN STATE
00/11: 0000     .DEFL WORD SECADDR	0
00/13: 00       .DEFL BYTE BLOCK	0
00/14: 00       .DEFL BYTE CFILE	0
00/15:          
00/15:          	; VARIOUS MISC VARIABLES
00/15:          	; TO BE USED IN LEAF-FUNCTIONS
00/15: 00       .DEFL BYTE SPARK	0
00/16:          
00/16:          	; ERROR BANK 0
00/16:          .BANK	BD
01/00:          .DATA
01/00:          ERR0_B	= BD
01/00:          
01/00:          	; INVALID ARGUMENTS
01/00: 494E5641
       4C494420
       41524755
       4D454E54
       530A0D   .DEFL BYTE ERROR00	"INVALID ARGUMENTS",0X0A,0X0D,
01/13: 55534147
       453A204D
       4C4F4144
       2046494C
       45312046
       494C4532
       202E2E2E
       0A0D00   			"USAGE: MLOAD FILE1 FILE2 ...",0X0A,0X0D,0
01/32: 43414E4E
       4F54204F
       50454E20
       46494C45
       0A0D00   .DEFL BYTE ERROR01	"CANNOT OPEN FILE",0X0A,0X0D,0
01/45:          
01/45:          BD	= BD+1	
