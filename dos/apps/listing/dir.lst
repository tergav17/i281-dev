00/00:          ; DOSDEF.S
01/80:          ; THIS FILE CONTAINS IMPORTANT DEFINES USED IN DOS/281
01/80:          
01/80:          ; BIOS CALLS
01/80:          REBOOT	= 0
01/80:          INDIR	= 1
01/80:          IRET	= 2
01/80:          SYSCALL	= 3
01/80:          SYSJUMP	= 4
01/80:          PRGM	= 5
01/80:          IWRITE	= 6
01/80:          
01/80:          HALT	= 0X7F
01/80:          
01/80:          ; SYSTEM CALLS
01/80:          S_EXIT	= 0
01/80:          S_PUTC	= 1
01/80:          S_GETC	= 2
01/80:          S_STAT	= 3
01/80:          S_PUTS	= 4
01/80:          S_INPUT	= 5
01/80:          S_OPEN	= 6
01/80:          S_CLOSE	= 7
01/80:          S_READ	= 8
01/80:          S_WRITE	= 9
01/80:          S_FSRCH	= 10
01/80:          S_NEXT	= 11
01/80:          S_DELET	= 12
01/80:          S_CREAT	= 13
01/80:          S_FREE	= 14
01/80:          S_EXEC	= 15
01/80:          
01/80:          ; MEMORY AREAS
01/80:          CF_NAME	= 0X60
01/80:          CF_SIZE	= 0X68
01/80:          CF_USR	= 0X6A
01/80:          DFT_USR	= 0X6B
01/80:          ARG_BNK	= 0X6C
01/80:          BD_FREE	= 0X6E
01/80:          MAX_IB	= 0X70
01/80:          MAX_DB	= 0X71
01/80:          CMDL_B	= 0X72
01/80:          AUTO_B	= 0X73
01/80:          KERNMEM	= 0X78
01/80:          BIOSMEM	= 0X7C
01/80:          
01/80:          ; DATA BANK ADDRESS
01/80:          DBANK	= 0X80		
01/80:          
01/80:          ; DIR.S
01/80:          ; LIST FILES IN DIRECTORY
01/80:          
01/80:          .BANK 1
01/80:          .TEXT
01/80:          	; START HERE
01/80:          	; SET OUT BANK TO BANK 0
01/80: 3000     START:	LOADI	A,0
01/81: A080     	STORE	[DBANK],A
01/83:          	
01/82:          	; SET UP STACK
01/82: 3C5E     	LOADI	D,0X60-2
01/84:          	
01/83:          	; FIRST ORDER OF BUISNESS: CLOSE EXISTING FILE
01/83:          	
01/83:          	; SET UP SYSTEM CALL ARGUMENTS
01/83: 3407     	LOADI	B,S_CLOSE
01/85:          	
01/84:          	; SET UP RETURN ADDRESS
01/84: 3801     	LOADI	C,1	; RETURN BANK
01/85: BB01     	STOREF	[D+1],C
01/86: 3888     	LOADI	C,@+2	; RETURN ADDRESS
01/88:          	
01/87:          	; AND DO SYSCALL
01/87: FF7B     	JUMP	SYSCALL
01/89:          	
01/88:          	; PROCESS ARGUMENTS
01/88: 3403     	LOADI	B,3
01/89: 3880     	LOADI	C,DOARGS
01/8A: FF76     	JUMP	INDIR
01/8C:          	
01/8B:          	; START THE SEARCH
01/8B:          	; SET THE SYSTEM CALL TYPE
01/8B:          	; AND EXECUTE
01/8B: 340A     BEGIN:	LOADI	B,S_FSRCH
01/8C: 388E     	LOADI	C,@+2
01/8D: FF75     	JUMP	SYSCALL
01/8E: 3401     	LOADI	B,1
01/8F: A46C     	STORE	[ARG_BNK],B
01/91:          	
01/90:          	; MAKE SURE WE GET A FILE
01/90: 5000     	ADDI	A,0
01/91: 3036     	LOADI	A,NOFILE
01/92: 3404     	LOADI	B,S_PUTS
01/93: 38E7     	LOADI	C,END
01/94: F76E     	BRNZ	SYSCALL
01/96:          	
01/95:          	; RESET RECORD KEEPING
01/95: 3000     	LOADI	A,0
01/96: A006     	STORE	[NUMFILE],A
01/97: A007     	STORE	[NUMFILE+1],A
01/98: A008     	STORE	[NUMFILE+2],A
01/99: A009     	STORE	[NUMFILE+3],A
01/9B:          	
01/9A:          	; PRINT HEADER
01/9A: 3003     	LOADI	A,HEADER
01/9B: 3404     	LOADI	B,S_PUTS
01/9C: 389E     	LOADI	C,@+2
01/9D: FF65     	JUMP	SYSCALL
01/9F:          	
01/9E:          	; PRINT THE FILE LISTING
01/9E:          	; UPDATE THE FILE COUNTER
01/9E: 8007     PRINTFI:LOAD	A,[NUMFILE+1]
01/9F: 5001     	ADDI	A,1
01/A0: A007     	STORE	[NUMFILE+1],A
01/A1: F103     	BRNC	0F
01/A2: 8006     	LOAD	A,[NUMFILE]
01/A3: 5001     	ADDI	A,1
01/A4: A006     	STORE	[NUMFILE],A
01/A6:          
01/A5:          	; MOVE THE USER AREA
01/A5: 806A     0:	LOAD	A,[CF_USR]
01/A6: 3401     	LOADI	B,1
01/A7: A480     	STORE	[DBANK],B
01/A8: A017     	STORE	[LSSTART],A
01/A9: 3400     	LOADI	B,0
01/AA: A480     	STORE	[DBANK],B
01/AC:          
01/AB:          	; PRINT OUT THE START OF THE LISTING
01/AB: 3017     	LOADI	A,LSSTART
01/AC: 3404     	LOADI	B,S_PUTS
01/AD: 38AF     	LOADI	C,@+2
01/AE: FF54     	JUMP	SYSCALL
01/B0:          
01/AF:          	; START PRINTING OUT THE NAME PROPER
01/AF: 3006     	LOADI	A,6
01/B0: A001     	STORE	[MAXIMUM],A
01/B1: 3000     	LOADI	A,0
01/B3:          	
01/B2:          	; STORE THE COUNTER
01/B2: A000     0:	STORE	[COUNT],A
01/B4:          
01/B3:          	; GET THE CHARACTER FROM THE NAME
01/B3: 9060     	LOADF	A,[A+CF_NAME]
01/B4: 3401     	LOADI	B,S_PUTC
01/B5: 38B7     	LOADI	C,@+2
01/B6: FF4C     	JUMP	SYSCALL
01/B8:          	
01/B7:          	; DO WE COUNT UP?
01/B7: 8000     	LOAD	A,[COUNT]
01/B8: 8401     	LOAD	B,[MAXIMUM]
01/B9: 5001     	ADDI	A,1
01/BA: D100     	CMP	A,B
01/BB: F001     	BRAE	1F
01/BC: FFF5     	JUMP	0B
01/BE:          	
01/BD:          	; EITHER PRINT A '.' OR MOVE ON TO THE NEXT FILE
01/BD: 7008     1:	SUBI	A,8
01/BE: F608     	BRZ	FINISH
01/C0:          	
01/BF:          	; PRINT A '.'
01/BF: 302E     	LOADI	A,'.'
01/C1:          
01/C0:          	; SET THE SYSTEM CALL TYPE
01/C0: 3401     	LOADI	B,S_PUTC
01/C2:          	
01/C1:          	; SET UP RETURN ADDRESS
01/C1:          	; AND DO SYSCALL
01/C1: 38C3     	LOADI	C,@+2
01/C2: FF40     	JUMP	SYSCALL
01/C4:          	
01/C3: 3008     	LOADI	A,8
01/C4: A001     	STORE	[MAXIMUM],A
01/C5: 3006     	LOADI	A,6
01/C6: FFEB     	JUMP	0B
01/C8:          	
01/C7:          	; FINISH OFF THE FILE LISTING
01/C7: 3020     FINISH:	LOADI	A,0x20
01/C8: 3401     	LOADI	B,S_PUTC
01/C9: 38CB     	LOADI	C,@+2
01/CA: FF38     	JUMP	SYSCALL
01/CC:          	
01/CB:          	; ADD THE FILE SIZE TO THE RUNNING COUNT
01/CB: 8009     	LOAD	A,[NUMBLK+1]
01/CC: 8469     	LOAD	B,[CF_SIZE+1]
01/CD: 4100     	ADD	A,B
01/CE: A009     	STORE	[NUMBLK+1],A
01/CF: 8008     	LOAD	A,[NUMBLK]
01/D0: F101     	BRNC	2F
01/D1: 5001     	ADDI	A,1
01/D2: 8468     2:	LOAD	B,[CF_SIZE]
01/D3: 4100     	ADD	A,B
01/D4: A008     	STORE	[NUMBLK],A
01/D6:          	
01/D5:          	; PRINT THE FILE SIZE
01/D5: 3000     	LOADI	A,0
01/D6: 38DB     	LOADI	C,NEXT
01/D7: BB00     	STOREF	[D],C
01/D8: 3402     	LOADI	B,2
01/D9: 3880     	LOADI	C,PRINTD
01/DA: FF26     	JUMP	INDIR
01/DC:          	
01/DB:          	; GET THE NEXT FILE
01/DB:          	; PRINT NEW LINE
01/DB: 3000     NEXT:	LOADI	A,CRLF
01/DC: 3404     	LOADI	B,S_PUTS
01/DD: 38DF     	LOADI	C,@+2
01/DE: FF24     	JUMP	SYSCALL
01/E0:          	
01/DF:          	; LOOK UP NEXT FILE
01/DF: 340B     	LOADI	B,S_NEXT
01/E0: 38E2     	LOADI	C,@+2
01/E1: FF21     	JUMP	SYSCALL
01/E3:          	
01/E2:          	; CHECK TO SEE IF IT WORKED
01/E2: 5000     	ADDI	A,0
01/E3: F6BA     	BRZ	PRINTFI
01/E5:          	
01/E4:          	; PRINT OUT THE FILE STATS
01/E4: 3402     	LOADI	B,2
01/E5: 38BF     	LOADI	C,ENDMSG
01/E6: FF1A     	JUMP	INDIR
01/E8:          
01/E7:          	; AND EXIT
01/E7: 3400     END:	LOADI	B,0
01/E8: FF1B     	JUMP	SYSJUMP	
01/EA:          	
01/E9:          .BANK	2
01/E9:          	
02/80:          	; PRINTS THE SIZE AS A 8 OR 16 BIT BASE-10 NUMBER
02/80:          	; A = 0: 8 BIT 1: 16 BIT
02/80: 7C02     PRINTD: SUBI	D,2
02/82:          	
02/81:          	; SET PADDING TO NULL CHARACTER AT FIRST
02/81: 3800     	LOADI	C,0
02/82: A803     	STORE	[PADDING],C
02/84:          	
02/83:          	; SEE IF WE ARE DOING 8 OR 16 BIT
02/83: 5000     	ADDI	A,0
02/84: F608     	BRZ	0F
02/86:          	
02/85:          V	= 10000
02/85: 3027     	LOADI	A,V/256
02/86: 3410     	LOADI	B,V%256
02/87: 3889     	LOADI	C,@+2
02/88: FF14     	JUMP	DOCHAR
02/8A:          	
02/89:          V	= 1000
02/89: 3003     	LOADI	A,V/256
02/8A: 34E8     	LOADI	B,V%256
02/8B: 388D     	LOADI	C,@+2
02/8C: FF10     	JUMP	DOCHAR
02/8E:          	
02/8D:          V	= 100
02/8D: 3000     0:	LOADI	A,V/256
02/8E: 3464     	LOADI	B,V%256
02/8F: 3891     	LOADI	C,@+2
02/90: FF0C     	JUMP	DOCHAR
02/92:          	
02/91:          V	= 10
02/91: 3000     	LOADI	A,V/256
02/92: 340A     	LOADI	B,V%256
02/93: 3895     	LOADI	C,@+2
02/94: FF08     	JUMP	DOCHAR
02/96:          	
02/95: 3030     	LOADI	A,'0'
02/96: A003     	STORE	[PADDING],A
02/98:          	
02/97:          V	= 1
02/97: 3000     	LOADI	A,V/256
02/98: 3401     	LOADI	B,V%256
02/99: 389B     	LOADI	C,@+2
02/9A: FF02     	JUMP	DOCHAR
02/9C:          	
02/9B: 5C02     	ADDI	D,2 
02/9C: FF65     	JUMP	IRET
02/9E:          	
02/9D:          	; A = UPPER SUB
02/9D:          	; B = LOWER SUB
02/9D: A804     DOCHAR:	STORE	[LEAFRET],C
02/9E: 8803     	LOAD	C,[PADDING]	
02/9F: A802     	STORE	[CHAR],C
02/A1:          	
02/A0:          	; PARK THE STACK
02/A0: AC05     	STORE	[SPARK],D
02/A2:          
02/A1:          	; GET THE SIZE
02/A1: 8868     0:	LOAD	C,[CF_SIZE]
02/A2: 8C69     	LOAD	D,[CF_SIZE+1]
02/A4:          	
02/A3:          	; DO 16 BIT SUBTRACTION
02/A3: 6D00     1:	SUB	D,B
02/A4: F002     	BRC	2F
02/A5: 7801     	SUBI	C,1
02/A6: F10D     	BRNC	4F
02/A7: 6800     2:	SUB	C,A
02/A8: F10B     	BRNC	4F
02/AA:          	
02/A9:          	; SAVE VALUE
02/A9: A868     	STORE	[CF_SIZE],C
02/AA: AC69     	STORE	[CF_SIZE+1],D
02/AC:          	
02/AB:          	; GET THE CHAR AND CHECK TO SEE IF IT IS A WHITESPACE
02/AB: 8802     	LOAD	C,[CHAR]
02/AC: 3C20     	LOADI	D,0X20
02/AD: DB00     	CMP	C,D
02/AE: F802     	BRA	3F
02/B0:          	
02/AF:          	; SET PADDING AND CHAR TO '0'
02/AF: 3830     	LOADI	C,'0'
02/B0: A803     	STORE	[PADDING],C
02/B2:          	
02/B1: 5801     3:	ADDI	C,1
02/B2: A802     	STORE	[CHAR],C
02/B3: FFED     	JUMP	0B
02/B5:          	
02/B4:          	; RESTORE THE STACK
02/B4: 8C05     4:	LOAD	D,[SPARK]
02/B6:          	
02/B5:          	; SEE IF IT IS ZERO
02/B5: 8002     	LOAD	A,[CHAR]
02/B6: 5000     	ADDI	A,0
02/B7: F702     	BRNZ	5F
02/B8: 8804     	LOAD	C,[LEAFRET]
02/B9: FE46     	JUMPR	C
02/BB:          	
02/BA:          	; PRINT THE CHARACTER
02/BA: 3401     5:	LOADI	B,S_PUTC
02/BB: 3802     	LOADI	C,2	; RETURN BANK
02/BC: BB01     	STOREF	[D+1],C
02/BD: 8804     	LOAD	C,[LEAFRET]
02/BE: FF44     	JUMP	SYSCALL
02/C0:          	
02/BF: 3802     ENDMSG:	LOADI	C,2
02/C0: BB01     	STOREF	[D+1],C
02/C1: 3000     	LOADI	A,CRLF
02/C2: 3404     	LOADI	B,S_PUTS
02/C3: 38C5     	LOADI	C,@+2
02/C4: FF3E     	JUMP	SYSCALL
02/C6:          
02/C5:          	; MOVE NUM FILES
02/C5: 8006     	LOAD	A,[NUMFILE]
02/C6: A068     	STORE	[CF_SIZE],A
02/C7: 8007     	LOAD	A,[NUMFILE+1]
02/C8: A069     	STORE	[CF_SIZE+1],A
02/CA:          	
02/C9:          	; PRINT NUMBER OF FILES
02/C9: 3001     	LOADI	A,1
02/CA: 38CD     	LOADI	C,@+3
02/CB: BB00     	STOREF	[D],C
02/CC: FFB3     	JUMP	PRINTD
02/CE:          	
02/CD:          	; PRINT FIRST PART OF MESSAGE
02/CD: 301F     	LOADI	A,ENDMSG0
02/CE: 3404     	LOADI	B,S_PUTS
02/CF: 38D1     	LOADI	C,@+2
02/D0: FF32     	JUMP	SYSCALL
02/D2:          	
02/D1:          	; MOVE NUM BLOCKS
02/D1: 8008     	LOAD	A,[NUMBLK]
02/D2: A068     	STORE	[CF_SIZE],A
02/D3: 8009     	LOAD	A,[NUMBLK+1]
02/D4: A069     	STORE	[CF_SIZE+1],A
02/D6:          	
02/D5:          	; PRINT NUMBER OF BLOCKS
02/D5: 3001     	LOADI	A,1
02/D6: 38D9     	LOADI	C,@+3
02/D7: BB00     	STOREF	[D],C
02/D8: FFA7     	JUMP	PRINTD
02/DA:          	
02/D9:          	; PRINT SECOND PART OF MESSAGE
02/D9: 302C     	LOADI	A,ENDMSG1
02/DA: 3404     	LOADI	B,S_PUTS
02/DB: 38DD     	LOADI	C,@+2
02/DC: FF26     	JUMP	SYSCALL
02/DE:          	
02/DD:          	; EXIT
02/DD: 3400     	LOADI	B,0
02/DE: FF25     	JUMP	SYSJUMP
02/E0:          	
02/DF:          .BANK	3
02/DF:          
03/80:          	; DO ARGUMENT PROCESSING
03/80:          	; SWITCH TO ARGUMENT PAGE
03/80: 8072     DOARGS:	LOAD	A,[CMDL_B]
03/81: A06C     	STORE	[ARG_BNK],A
03/82: A080     	STORE	[DBANK],A
03/84:          	
03/83:          	; SET UP POINTER
03/83: 3800     	LOADI	C,0
03/85:          	
03/84:          	; SKIP THE INITIAL COMMAND
03/84: 9200     0:	LOADF	A,[C]
03/85: 3420     	LOADI	B,0X20
03/86: D100     	CMP	A,B
03/87: F902     	BRBE	1F
03/88: 5801     	ADDI	C,1
03/89: FFFA     	JUMP	0B
03/8B:          
03/8A:          	; LOOK FOR THE FIRST ARGUMENT
03/8A: 9200     1:	LOADF	A,[C]
03/8B: 5000     	ADDI	A,0
03/8C: F604     	BRZ	2F
03/8D: D100     	CMP	A,B
03/8E: F805     	BRA	3F
03/8F: 5801     	ADDI	C,1
03/90: FFF9     	JUMP	1B
03/92:          	
03/91:          	; NO MORE ARGS, USE DEFAULT PATH
03/91: 301B     2:	LOADI	A,DFTPATH
03/92: 3401     	LOADI	B,1
03/93: FF13     	JUMP	9F
03/95:          	
03/94:          	; THERE IS AN ARG, SEE IF IT IS IN THE FORMAT OF '0:'
03/94: 9201     3:	LOADF	A,[C+1]
03/95: 703A     	SUBI	A,':'
03/96: F70A     	BRNZ	4F
03/97: 9202     	LOADF	A,[C+2]
03/98: 7020     	SUBI	A,0X20
03/99: F807     	BRA	4F
03/9B:          	
03/9A:          	; YEP, LETS ADD THE *.* AND RETURN
03/9A: 302A     	LOADI	A,'*'
03/9B: B202     	STOREF	[C+2],A
03/9C: B204     	STOREF	[C+4],A
03/9D: 302E     	LOADI	A,'.'
03/9E: B203     	STOREF	[C+3],A
03/9F: 3000     	LOADI	A,0
03/A0: B205     	STOREF	[C+5],A
03/A2:          	
03/A1:          	; RETURN
03/A1: 2200     4:	MOV	A,C
03/A2: 3401     	LOADI	B,1
03/A3: 3800     	LOADI	C,0
03/A4: A880     	STORE	[DBANK],C
03/A5: 388B     	LOADI	C,BEGIN
03/A6: FF5A     	JUMP	INDIR
03/A8:          	
03/A7: 3800     9:	LOADI	C,0
03/A8: A880     	STORE	[DBANK],C
03/A9: A46C     	STORE	[ARG_BNK],B
03/AA: 3401     	LOADI	B,1
03/AB: 388B     	LOADI	C,BEGIN
03/AC: FF54     	JUMP	INDIR
03/AE:          
03/AD:          
03/AD:          
03/AD:          .BANK	1
01/E9:          .DATA
01/E9:          
01/00:          	; CR / LF
01/00: 0A0D00   .DEFL BYTE CRLF		0X0A,0X0D,0
01/03:          
01/03:          	; FILE LISTING HEADER
01/03: 5541204E
       414D4520
       20204558
       2053495A
       450A0D00 .DEFL BYTE HEADER	"UA NAME   EX SIZE",0X0A,0X0D,0
01/17:          
01/17:          	; FILE LIST START
01/17: 303A2000 .DEFL BYTE LSSTART	"0: ",0
01/1B:          
01/1B:          	; DEFAULT PATH TO SEARCH
01/1B: 2A2E2A00 .DEFL BYTE DFTPATH		"*.*",0
01/1F:          
01/1F:          	; OPERATION END MESSAGE STRINGS
01/1F: 2046494C
       4553204F
       56455220
       00       .DEFL BYTE ENDMSG0	" FILES OVER ",0
01/2C: 20424C4F
       434B530A
       0D00     .DEFL BYTE ENDMSG1	" BLOCKS",0X0A,0X0D,0
01/36:          
01/36:          	; NO FILE MESSAGE
01/36: 4E4F2046
       494C4553
       0A0D00   .DEFL BYTE NOFILE	"NO FILES",0X0A,0X0D,0
01/41:          
01/41:          .BANK 0
00/00:          .BSS
00/00:          	; DEFINE SOME SPACE ON THE ZERO BANK FOR STATE INFORMATION
00/00:          
00/00:          	; GENERAL PURPOSE COUNTER
00/00: 00       .DEFL BYTE COUNT	0
00/01:          
00/01:          	; COUNTER MAXIMUM
00/01: 00       .DEFL BYTE MAXIMUM	0
00/02:          
00/02:          	; VALUE FOR DECIMAL NUMBER PRINT
00/02: 00       .DEFL BYTE CHAR		0
00/03:          
00/03:          	; PADDING FOR DECIMAL NUMBER PRINT
00/03: 00       .DEFL BYTE PADDING	0
00/04:          
00/04:          	; RETURN FOR LEAF FUNCTIONS
00/04: 00       .DEFL BYTE LEAFRET	0
00/05:          
00/05:          	; STACK PARKING SPACE
00/05: 00       .DEFL BYTE SPARK	0
00/06:          
00/06:          	; RECORD KEEPING
00/06: 0000     .DEFL BYTE NUMFILE	0,0
