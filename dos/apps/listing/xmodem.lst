00/00:          ; DOSDEF.S
01/80:          ; THIS FILE CONTAINS IMPORTANT DEFINES USED IN DOS/281
01/80:          ; GAVIN TERSTEEG, 2024
01/80:          ; SDMAY24-14
01/80:          
01/80:          ; BIOS CALLS
01/80:          BOOT	= 0
01/80:          ALTBOOT = 1
01/80:          INDIR	= 2
01/80:          IRET	= 3
01/80:          SYSCALL	= 4
01/80:          SYSJUMP	= 5
01/80:          PRGM	= 6
01/80:          IWRITE	= 7
01/80:          ZSTART	= 8
01/80:          
01/80:          HALT	= 0X7F
01/80:          
01/80:          ; SYSTEM CALLS
01/80:          S_EXIT	= 0
01/80:          S_PUTC	= 1
01/80:          S_GETC	= 2
01/80:          S_STAT	= 3
01/80:          S_PUTS	= 4
01/80:          S_INPUT	= 5
01/80:          S_OPEN	= 6
01/80:          S_CLOSE	= 7
01/80:          S_READ	= 8
01/80:          S_WRITE	= 9
01/80:          S_FSRCH	= 10
01/80:          S_NEXT	= 11
01/80:          S_DELET	= 12
01/80:          S_CREAT	= 13
01/80:          S_FREE	= 14
01/80:          S_EXEC	= 15
01/80:          
01/80:          ; MEMORY AREAS
01/80:          CF_NAME	= 0X60
01/80:          CF_SIZE	= 0X68
01/80:          CF_USR	= 0X6A
01/80:          DFT_USR	= 0X6B
01/80:          ARG_BNK	= 0X6C
01/80:          BD_FREE	= 0X6E
01/80:          MAX_IB	= 0X70
01/80:          MAX_DB	= 0X71
01/80:          CMDL_B	= 0X72
01/80:          AUTO_B	= 0X73
01/80:          KERNMEM	= 0X78
01/80:          BIOSMEM	= 0X7C
01/80:          AU_RUN	= 0X00
01/80:          AU_PNTR	= 0X01
01/80:          AU_BANK	= 0X02
01/80:          AU_BLK	= 0X03
01/80:          AU_UA	= 0X04
01/80:          AU_FILE	= 0X06
01/80:          AU_MISC	= 0X18
01/80:          
01/80:          ; DATA BANK ADDRESS
01/80:          DBANK	= 0X80		
01/80:          
01/80:          
01/80:          ; XMODEM.S
01/80:          ; SEND OR RECIEVE A FILE VIA XMODEM
01/80:          ; GAVIN TERSTEEG, 2024
01/80:          ; SDMAY24-14
01/80:          
01/80:          ; BUFFER WILL START AT BANK 2
01/80:          BUFFER	= 2
01/80:          
01/80:          ; BANK ALLOCATION STUFF
01/80:          BI	= 1
01/80:          BD	= 1
01/80:          
01/80:          ; MAXIMUM ARGUMENTS
01/80:          MAXARGS	= 1
01/80:          
01/80:          ; PROTOCOL VALUES
01/80:          ACK	= 0X06
01/80:          NAK	= 0X15
01/80:          SOH	= 0X01
01/80:          EOT	= 0X04
01/80:          EOF	= 0X1A
01/80:          
01/80:          
01/80:          .TEXT
01/80:          .BANK	BI
01/80:          CORE0_B	= BI
01/80:          
01/80:          	; START BY PROCESSING THE ARGUMENTS
01/80: 3000     START:	LOADI	A,0
01/81: A080     	STORE	[DBANK],A
01/83:          	
01/82:          	; RESET ARG STATE
01/82: A003     	STORE	[SFLAG],A
01/83: A004     	STORE	[TFLAG],A
01/84: A000     	STORE	[ARGC],A
01/86:          	
01/85:          	; SET UP STACK
01/85: 3C5E     	LOADI	D,0X60-2
01/87:          	
01/86:          	; SYSCALL RETURN BANK
01/86: 3801     	LOADI	C,1	
01/87: BB01     	STOREF	[D+1],C
01/89:          	
01/88:          	; SET UP POINTER
01/88: 3800     	LOADI	C,0
01/8A:          	
01/89:          	; GO TO ARGUMENT BANK
01/89: 8072     0:	LOAD	A,[CMDL_B]
01/8A: A06C     	STORE	[ARG_BNK],A
01/8B: A080     	STORE	[DBANK],A
01/8D:          
01/8C:          	; SKIP THE CURRENT ARGUMENT
01/8C: 9200     1:	LOADF	A,[C]
01/8D: 3420     	LOADI	B,0X20
01/8E: D100     	CMP	A,B
01/8F: F902     	BRBE	2F
01/90: 5801     	ADDI	C,1
01/91: FFFA     	JUMP	1B
01/93:          
01/92:          	; LOOK FOR AN ARGUMENT
01/92: 9200     2:	LOADF	A,[C]
01/93: 5000     	ADDI	A,0
01/94: F631     	BRZ	ARGDONE
01/95: D100     	CMP	A,B
01/96: F802     	BRA	3F
01/97: 5801     	ADDI	C,1
01/98: FFF9     	JUMP	2B
01/9A:          
01/99:          	; IS IT A FLAG?
01/99: 342D     3:	LOADI	B,'-'
01/9A: D100     	CMP	A,B
01/9B: F717     	BRNZ	5F
01/9D:          	
01/9C:          	; HANDLE FLAGS HERE	
01/9C: 5801     4:	ADDI	C,1
01/9D: 9200     	LOADF	A,[C]
01/9E: 5000     	ADDI	A,0
01/9F: F626     	BRZ	ARGDONE
01/A0: 3420     	LOADI	B,0X20
01/A1: D100     	CMP	A,B
01/A2: F9EF     	BRBE	2B
01/A4:          	
01/A3:          	; REGISTER THE FLAG
01/A3: 3400     	LOADI	B,0
01/A4: A480     	STORE	[DBANK],B
01/A6:          
01/A5: 7053     	SUBI	A,'S'
01/A6: F701     	BRNZ	@+2
01/A7: 3403     	LOADI	B,SFLAG
01/A8: 7001     	SUBI	A,'T'-'S'
01/A9: F701     	BRNZ	@+2
01/AA: 3404     	LOADI	B,TFLAG
01/AC:          	
01/AB:          	; IS IT A RECOGNIZED FLAG?
01/AB: 5400     	ADDI	B,0
01/AC: F60F     	BRZ	ARGBAD
01/AD: 3001     	LOADI	A,1
01/AE: B100     	STOREF	[B],A
01/B0:          
01/AF:          	; THERE MAY BE ANOTHER FLAG
01/AF: 8472     	LOAD	B,[CMDL_B]
01/B0: A46C     	STORE	[ARG_BNK],B
01/B1: A480     	STORE	[DBANK],B
01/B2: FFE9     	JUMP	4B
01/B4:          
01/B3:          	; SAVE THE ARGUMENT
01/B3: 3400     5:	LOADI	B,0
01/B4: A480     	STORE	[DBANK],B
01/B5: 8400     	LOAD	B,[ARGC]
01/B6: B901     	STOREF	[B+ARGV],C
01/B8:          	
01/B7:          	; DID WE EXCEED THE ALLOWED NUMBER OF ARGUMENTS
01/B7: 7401     	SUBI	B,MAXARGS
01/B8: F003     	BRC	ARGBAD
01/B9: 5402     	ADDI	B,MAXARGS+1
01/BA: A400     	STORE	[ARGC],B
01/BB: FFCD     	JUMP	0B
01/BD:          	
01/BC:          	; BAD ARGUMENT
01/BC: 3000     ARGBAD:	LOADI	A,0
01/BD: A080     	STORE	[DBANK],A
01/BF:          	
01/BE: 3001     	LOADI	A,STR_B
01/BF: A06C     	STORE	[ARG_BNK],A
01/C0: 3000     	LOADI	A,ERROR0
01/C2:          	
01/C1:          	; PRINT ERROR MESSAGE
01/C1: 3404     	LOADI	B,S_PUTS
01/C2: 38C4     	LOADI	C,EXIT
01/C3: FF40     	JUMP	SYSCALL	
01/C5:          
01/C4:          	; EXIT PROGRAM
01/C4: 3400     EXIT:	LOADI	B,0
01/C5: FF3F     	JUMP	SYSJUMP
01/C7:          	
01/C6:          	; ARGUMENT PROCESSING DONE
01/C6: 3000     ARGDONE:LOADI	A,0
01/C7: A080     	STORE	[DBANK],A
01/C9:          	
01/C8:          	; CHECK ARG COUNT
01/C8: 8000     	LOAD	A,[ARGC]
01/C9: 7001     	SUBI	A,1
01/CA: F7F1     	BRNZ	ARGBAD
01/CC:          	
01/CB:          	; DO WE RECIEVE A FILE?
01/CB: 8003     	LOAD	A,[SFLAG]
01/CC: 5000     	ADDI	A,0
01/CD: 3402     	LOADI	B,RECV_B
01/CE: 3880     	LOADI	C,RECIEVE
01/CF: F632     	BRZ	INDIR
01/D1:          	
01/D0: FFF3     	JUMP	EXIT
01/D2:          
01/D1:          
01/D1:          	; BANK IS DONE, MOVE ON TO THE NEXT
01/D1:          BI	= BI+1
01/D1:          .TEXT
01/D1:          .BANK	BI
02/80:          RECV_B	= BI
02/80:          
02/80:          	; RECIEVE A FILE VIA XMODEM
02/80:          	; START BY CREATING THE FILE WE WILL BE PLACING DATA INTO
02/80: 8072     RECIEVE:LOAD	A,[CMDL_B]
02/81: A06C     	STORE	[ARG_BNK],A
02/82: 8001     	LOAD	A,[ARGV]
02/83: 3802     	LOADI	C,BI
02/84: BB01     	STOREF	[D+1],C
02/85: 340D     	LOADI	B,S_CREAT
02/86: 3888     	LOADI	C,@+2
02/87: FF7C     	JUMP	SYSCALL
02/88: 5000     	ADDI	A,0
02/89: F606     	BRZ	0F
02/8B:          	
02/8A:          	; ERROR!
02/8A: 3040     	LOADI	A,ERROR2
02/8B: 3401     RERROR:	LOADI	B,STR_B
02/8C: A46C     	STORE	[ARG_BNK],B
02/8D: 3404     	LOADI	B,S_PUTS
02/8E: 38FD     	LOADI	C,9F
02/8F: FF74     	JUMP	SYSCALL
02/91:          	
02/90:          	; RESET THE READ-IN STATE
02/90: 3000     0:	LOADI	A,0
02/91: A006     	STORE	[BLOCK],A
02/92: A00B     	STORE	[LASTB],A
02/93: 3003     	LOADI	A,BUFFER+1
02/94: A007     	STORE	[BANK],A
02/95: A06C     	STORE	[ARG_BNK],A
02/97:          	
02/96:          	; START OF RECIEVE STATE MACHINE
02/96:          	; WAIT TILL WE STOP RECIEVING INFORMATION
02/96: 3400     RSTART: LOADI	B,0
02/97: A408     1:	STORE	[TIMEOUT],B
02/98: 389B     	LOADI	C,@+3
02/99: 3403     RSTAT:	LOADI	B,S_STAT
02/9A: FF69     	JUMP	SYSCALL
02/9B: 8408     	LOAD	B,[TIMEOUT]
02/9C: 5401     	ADDI	B,1
02/9D: F605     	BRZ	0F
02/9E: 5000     	ADDI	A,0
02/9F: F6F7     	BRZ	1B
02/A0: 3896     	LOADI	C,RSTART
02/A1: 3402     RGETC:	LOADI	B,S_GETC
02/A2: FF61     	JUMP	SYSCALL
02/A4:          	
02/A3:          	; START SENDING OUT "NAK"S AND WAIT TILL WE GET SOMETHING
02/A3: 3000     0:	LOADI	A,0
02/A4: A008     1:	STORE	[TIMEOUT],A
02/A5: 38A7     	LOADI	C,@+2
02/A6: FFF2     	JUMP	RSTAT
02/A7: 5000     	ADDI	A,0
02/A8: F707     	BRNZ	RCONT
02/A9: 8008     	LOAD	A,[TIMEOUT]
02/AA: 5001     	ADDI	A,1
02/AB: F7F8     	BRNZ	1B
02/AD:          	
02/AC:          	; SEND THE NAK
02/AC: 3015     	LOADI	A,NAK
02/AD: 38A3     	LOADI	C,0B
02/AE: 3401     RPUTC:	LOADI	B,S_PUTC
02/AF: FF54     	JUMP	SYSCALL
02/B1:          
02/B0:          	; WE GOT SOMETHING
02/B0: 38B2     RCONT:	LOADI	C,@+2
02/B1: FFEF     	JUMP	RGETC
02/B3:          	
02/B2:          	; IS IT EOT?
02/B2: 7004     	SUBI	A,EOT
02/B3: F644     	BRZ	8F
02/B5:          	
02/B4:          	; IS IT SOH?
02/B4: 70FD     	SUBI	A,SOH-EOT
02/B5: F602     	BRZ	3F
02/B7:          	
02/B6:          	; WHAT THE FUCK IS THIS SHIT?
02/B6: 3054     	LOADI	A,ERROR3
02/B7: FFD3     	JUMP	RERROR
02/B9:          	
02/B8:          	; GET THE BLOCK #
02/B8: 38BA     3:	LOADI	C,@+2
02/B9: FFE7     	JUMP	RGETC
02/BA: A00A     	STORE	[CURRB],A
02/BB: 38BD     	LOADI	C,@+2
02/BC: FFE4     	JUMP	RGETC
02/BD: 840A     	LOAD	B,[CURRB]
02/BE: 4100     	ADD	A,B
02/BF: 5001     	ADDI	A,1
02/C0: F7D5     	BRNZ	RSTART
02/C2:          	
02/C1:          	; COPY DATA INTO BUFFER
02/C1: 3400     	LOADI	B,0
02/C2: A009     4:	STORE	[CHECKSUM],A
02/C3: A405     	STORE	[POINTER],B
02/C4: 38C6     	LOADI	C,@+2
02/C5: FFDB     	JUMP	RGETC
02/C6: 8405     	LOAD	B,[POINTER]
02/C7: 3802     	LOADI	C,BUFFER
02/C8: A880     	STORE	[DBANK],C
02/C9: B100     	STOREF	[B],A
02/CA: 3800     	LOADI	C,0
02/CB: A880     	STORE	[DBANK],C
02/CC: 8809     	LOAD	C,[CHECKSUM]
02/CD: 4200     	ADD	A,C
02/CE: 5401     	ADDI	B,1
02/CF: F5F2     	BRNN	4B
02/D1:          
02/D0:          	; CHECK THE SUM
02/D0: A009     	STORE	[CHECKSUM],A
02/D1: 38D3     	LOADI	C,@+2
02/D2: FFCE     	JUMP	RGETC
02/D3: 8409     	LOAD	B,[CHECKSUM]
02/D4: D100     	CMP	A,B
02/D5: F7C0     	BRNZ	RSTART
02/D7:          	
02/D6:          	; CHECK BLOCK STATE
02/D6:          	; IF ITS THE SAME, LETS TRY TO GET TO THE NEXT ONE
02/D6: 800A     	LOAD	A,[CURRB]
02/D7: 840B     	LOAD	B,[LASTB]
02/D8: D100     	CMP	A,B
02/D9: F61B     	BRZ	7F
02/DA: A00B     	STORE	[LASTB],A
02/DC:          	
02/DB:          	; COPY INTO BUFFER
02/DB: 8007     	LOAD	A,[BANK]
02/DC: 3407     	LOADI	B,BUFFER+5
02/DD: D100     	CMP	A,B
02/DE: F708     	BRNZ	5F
02/E0:          	
02/DF:          	; WRITE OUT BUFFER
02/DF: 8006     	LOAD	A,[BLOCK]
02/E0: 3409     	LOADI	B,S_WRITE
02/E1: 38E3     	LOADI	C,@+2
02/E2: FF21     	JUMP	SYSCALL
02/E3: 8006     	LOAD	A,[BLOCK]
02/E4: 5001     	ADDI	A,1
02/E5: A006     	STORE	[BLOCK],A
02/E6: 3003     	LOADI	A,BUFFER+1
02/E8:          
02/E7:          	; EXECUTE COPY
02/E7: AC0C     5:	STORE	[SPARK],D
02/E8: 3402     	LOADI	B,BUFFER
02/E9: 3800     	LOADI	C,0
02/EA: A480     6:	STORE	[DBANK],B
02/EB: 9E00     	LOADF	D,[C]
02/EC: A080     	STORE	[DBANK],A
02/ED: BE00     	STOREF	[C],D
02/EE: 5801     	ADDI	C,1
02/EF: F5FA     	BRNN	6B
02/F1:          	
02/F0:          	; UPDATE STATE
02/F0: 3400     	LOADI	B,0
02/F1: A480     	STORE	[DBANK],B
02/F2: 8C0C     	LOAD	D,[SPARK]
02/F3: 5001     	ADDI	A,1
02/F4: A007     	STORE	[BANK],A
02/F6:          	
02/F5:          	; SEND OUT ACK AND CONTINUE
02/F5: 3006     7:	LOADI	A,ACK
02/F6: 38B0     	LOADI	C,RCONT
02/F7: FFB6     	JUMP	RPUTC
02/F9:          
02/F8:          	; TERMINATE BLOCK
02/F8:          	; SEND A FINAL ACK
02/F8: 3003     8:	LOADI	A,TERM_B
02/F9: B301     	STOREF	[D+1],A
02/FA: 3006     	LOADI	A,ACK
02/FB: 3880     	LOADI	C,RTERM
02/FC: FFB1     	JUMP	RPUTC
02/FE:          	
02/FD:          	; EXIT
02/FD: 3401     9:	LOADI	B,CORE0_B
02/FE: 38C4     	LOADI	C,EXIT
02/FF: FF02     	JUMP	INDIR
02/101:          
02/00:          	; BANK IS DONE, MOVE ON TO THE NEXT
02/00:          BI	= BI+1
02/00:          .TEXT
02/00:          .BANK	BI
03/80:          TERM_B	= BI
03/80:          
03/80:          	; TERMINATE THE LATEST RECIEVED BLOCK
03/80:          	; IF IT'S INCOMPLETE
03/80: 8007     RTERM:	LOAD	A,[BANK]
03/81: 8404     	LOAD	B,[TFLAG]
03/82: 3803     	LOADI	C,BUFFER+1
03/83: D200     	CMP	A,C
03/84: F60E     	BRZ	3F
03/85: 7001     	SUBI	A,1
03/86: 5400     	ADDI	B,0
03/87: F60A     	BRZ	2F
03/89:          	
03/88:          	; CORRECT TEXT ENDING
03/88: 387F     	LOADI	C,0X7F
03/89: A080     	STORE	[DBANK],A
03/8A: 9600     0:	LOADF	B,[C]
03/8B: 741A     	SUBI	B,EOF
03/8C: F703     	BRNZ	1F
03/8D: B600     	STOREF	[C],B
03/8E: 7801     	SUBI	C,1
03/8F: F0FA     	BRC	0B
03/90: 3400     1:	LOADI	B,0
03/91: A480     	STORE	[DBANK],B
03/93:          
03/92:          	; FILL THE TEST OF THE BUFFER WITH ZEROS
03/92: 5001     2:	ADDI	A,1
03/93: 3407     3:	LOADI	B,BUFFER+5
03/94: D100     	CMP	A,B
03/95: F607     	BRZ	5F
03/96: 3400     	LOADI	B,0
03/97: 3800     	LOADI	C,0
03/98: A080     	STORE	[DBANK],A
03/99: B600     4:	STOREF	[C],B
03/9A: 5801     	ADDI	C,1
03/9B: F5FD     	BRNN	4B
03/9C: FFF5     	JUMP	2B
03/9E:          	
03/9D:          	; WRITE THE BLOCK
03/9D: 3800     5:	LOADI	C,0
03/9E: A880     	STORE	[DBANK],C
03/9F: 3801     	LOADI	C,CORE0_B
03/A0: BB01     	STOREF	[D+1],C
03/A1: 8006     	LOAD	A,[BLOCK]
03/A2: 3409     	LOADI	B,S_WRITE
03/A3: 38C4     	LOADI	C,EXIT
03/A4: FF5F     	JUMP	SYSCALL
03/A6:          
03/A5:          .DATA
03/00:          .BANK	BD
01/00:          STR_B	= BD
01/00:          
01/00:          	; ERROR MESSAGES
01/00: 494E5641
       4C494420
       41524755
       4D454E54
       530A0D   .DEFL BYTE ERROR0	"INVALID ARGUMENTS",0X0A,0X0D,
01/13: 55534147
       453A2058
       4D4F4445
       4D205B2D
       53545D20
       46494C45
       0A0D00   			"USAGE: XMODEM [-ST] FILE",0X0A,0X0D,0
01/2E: 43414E27
       54204F50
       454E2046
       494C450A
       0D00     .DEFL BYTE ERROR1	"CAN'T OPEN FILE",0X0A,0X0D,0
01/40: 43414E27
       54204352
       45415445
       2046494C
       450A0D00 .DEFL BYTE ERROR2	"CAN'T CREATE FILE",0X0A,0X0D,0
01/54: 5452414E
       53464552
       20464149
       4C45440A
       0D00     .DEFL BYTE ERROR3	"TRANSFER FAILED",0X0A,0X0D,0
01/66:          
01/66:          	; ZERO BANK STUFF
01/66:          .BANK	0
00/00:          .BSS
00/00:          
00/00:          	; COMMAND LINE ARGUMENTS
00/00: 00       .DEFL BYTE ARGC		0
00/01: 0000     .DEFL BYTE ARGV		0,0
00/03:          
00/03:          	; COMMAND LINE FLAGS
00/03: 00       .DEFL BYTE SFLAG	0
00/04: 00       .DEFL BYTE TFLAG	0
00/05:          
00/05:          	; XMODEM STATE
00/05: 00       .DEFL BYTE POINTER	0
00/06: 00       .DEFL BYTE BLOCK	0
00/07: 00       .DEFL BYTE BANK		0
00/08: 00       .DEFL BYTE TIMEOUT	0
00/09: 00       .DEFL BYTE CHECKSUM	0
00/0A: 00       .DEFL BYTE CURRB	0
00/0B: 00       .DEFL BYTE LASTB	0
00/0C:          
00/0C:          	; STACK PARKING SPACE
00/0C: 00       .DEFL BYTE SPARK	0
