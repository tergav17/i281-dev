00/00:          ; CFDRVR.S
01/80:          ; COMPACT FLASH DRIVER PROGRAM FOR MONITOR
01/80:          ; GAVIN TERSTEEG, 2024
01/80:          ; SDMAY24-14
01/80:          
01/80:          ; DEFINES
01/80:          DBANK	= 0X80		; DATA BANK ADDRESS 
01/80:          
01/80:          UART	= 0X90		; UART BASE ADDRESS
01/80:          UART_RH	= UART+0X00	; UART READ HOLDING
01/80:          UART_TH	= UART+0X00	; UART TRANSMIT HOLDING
01/80:          UART_DL = UART+0X00	; UART DIVISOR LOW
01/80:          UART_DH = UART+0X01	; UART DIVISOR HIGH
01/80:          UART_LC = UART+0X03	; UART LINE CONTROL
01/80:          UART_LS	= UART+0X05	; UART LINE STATUS
01/80:          SCRATCH	= UART+0X07	; SCRATCH BYTE ADDRESS
01/80:          
01/80:          CF	= 0XA0		; COMPACT FLASH BASE ADDRESS
01/80:          CF_DATA	= CF+0X00	; CF DATA
01/80:          CF_ERR	= CF+0X01	; CF ERROR
01/80:          CF_FEAT	= CF+0x01	; CF FEATURES
01/80:          CF_CNT	= CF+0X02	; CF SECTOR COUNT
01/80:          CF_LBA0	= CF+0X03	; CF LBA BITS 0-7
01/80:          CF_LBA1	= CF+0X04	; CF LBA BITS 8-15
01/80:          CF_LBA2	= CF+0X05	; CF LBA BITS 16-23
01/80:          CF_LBA3	= CF+0X06	; CF LBA BITS 24-27
01/80:          CF_STAT	= CF+0X07	; CF STATUS
01/80:          CF_CMD	= CF+0X07	; CF COMMAND
01/80:          
01/80:          CF_8BIT	= 0X01		; 8 BIT MODE
01/80:          CF_DCAC	= 0X82		; DISABLE CACHE
01/80:          
01/80:          CF_READ	= 0X20		; READ COMMAND
01/80:          CF_SETF	= 0XEF		; SET FEATURE COMMAND
01/80:          
01/80:          RETURN	= 0X00		; MONITOR RETURN VECTOR
01/80:          
01/80:          	; AVAILABLE COMMANDS TO MONITOR
01/80:          	; 0X80: FILL PATTERN #1
01/80:          	; 0X81: FILL PATTERN #2
01/80:          	; 0X82: DUMP BUFFER
01/80:          	; 0X83: STREAM COMPACT FLASH TO BUFFER
01/80:          	; 0X84: STREAM BUFFER TO COMPACT FLASH
01/80:          	
01/80:          
01/80:          	; JUMP TABLE
01/80: FF04     	JUMP	FILL1
01/81: FF0E     	JUMP	FILL2
01/82: FF2E     	JUMP	DUMP
01/83: FF17     	JUMP	CFREAD
01/84: FF21     	JUMP	CFWRITE
01/86:          	
01/85:          	; FILLS UP THE FIRST 4 BANKS WITH A TEST PATTERN (PATTERN 1)
01/85: 3000     FILL1:	LOADI	A,0
01/86: 3804     	LOADI	C,4
01/87: 7801     0:	SUBI	C,1
01/88: F177     	BRNC	RETURN
01/89: A880     	STORE	[DBANK],C
01/8A: 3400     	LOADI	B,0
01/8B: B100     1:	STOREF	[B],A
01/8C: 5001     	ADDI	A,1
01/8D: 5401     	ADDI	B,1
01/8E: F5FC     	BRNN	1B
01/8F: FFF7     	JUMP	0B
01/91:          	
01/90:          	; FILLS UP THE FIRST 4 BANKS WITH A TEST PATTERN (PATTERN 2)
01/90: 30FF     FILL2:	LOADI	A,0XFF
01/91: 3804     	LOADI	C,4
01/92: 7801     0:	SUBI	C,1
01/93: F16C     	BRNC	RETURN
01/94: A880     	STORE	[DBANK],C
01/95: 3400     	LOADI	B,0
01/96: B100     1:	STOREF	[B],A
01/97: 7001     	SUBI	A,1
01/98: 5401     	ADDI	B,1
01/99: F5FC     	BRNN	1B
01/9A: FFF7     	JUMP	0B
01/9C:          	
01/9B:          	; FILLS UP THE FIRST 4 BANKS WITH DATA FROM THE COMPACT FLASH
01/9B: 38FC     CFREAD:	LOADI	C,0-4
01/9C: 5804     0:	ADDI	C,4
01/9D: A880     	STORE	[DBANK],C
01/9E: 3400     	LOADI	B,0
01/9F: 80A0     1:	LOAD	A,[CF_DATA]
01/A0: B100     	STOREF	[B],A
01/A1: 5401     	ADDI	B,1
01/A2: F5FC     	BRNN	1B
01/A3: 7803     	SUBI	C,3
01/A4: F7F7     	BRNZ	0B
01/A5: FF5A     	JUMP	RETURN
01/A7:          
01/A6:          
01/A6:          	; WRITE 4 BANKS OF DATA TO THE COMPACT FLASH
01/A6: 38FC     CFWRITE:LOADI	C,0-4
01/A7: 5804     0:	ADDI	C,4
01/A8: A880     	STORE	[DBANK],C
01/A9: 3400     	LOADI	B,0
01/AA: 9100     1:	LOADF	A,[B]
01/AB: A0A0     	STORE	[CF_DATA],A
01/AC: 5401     	ADDI	B,1
01/AD: F5FC     	BRNN	1B
01/AE: 7803     	SUBI	C,3
01/AF: F7F7     	BRNZ	0B
01/B0: FF4F     	JUMP	RETURN
01/B2:          
01/B1:          	; DUMPS THE CONTENT OF THE BUFFER ONTO THE TERMINAL
01/B1: 3000     DUMP:	LOADI	A,0
01/B2: 3400     	LOADI	B,0
01/B4:          	
01/B3:          	; DO WE NEED TO PRINT A CRLF?
01/B3: 2800     DLOOP:	MOV	C,A
01/B4: C900     	SHIFTR	C
01/B5: F00E     	BRC	PRHEX
01/B6: C900     	SHIFTR	C
01/B7: F00C     	BRC	PRHEX
01/B8: C900     	SHIFTR	C
01/B9: F00A     	BRC	PRHEX
01/BA: C900     	SHIFTR	C
01/BB: F008     	BRC	PRHEX
01/BD:          	
01/BC:          	; PRINT THE LINE FEED
01/BC: 38BE     	LOADI	C,@+2
01/BD: FF33     	JUMP	UWAIT
01/BE: 380A     	LOADI	C,0X0A
01/BF: A890     	STORE	[UART_TH],C
01/C1:          	
01/C0:          	; PRINT THE CARRIAGE RETURN
01/C0: 38C2     	LOADI	C,@+2
01/C1: FF2F     	JUMP	UWAIT
01/C2: 380D     	LOADI	C,0X0D
01/C3: A890     	STORE	[UART_TH],C
01/C5:          	
01/C4:          	; PRINT THE HEX
01/C4:          	; WAIT FOR UART TO READY
01/C4: 38C6     PRHEX:	LOADI	C,@+2
01/C5: FF2B     	JUMP	UWAIT
01/C7:          	
01/C6:          	; GET THE BYTE
01/C6: A480     	STORE	[DBANK],B
01/C7: 9C00     	LOADF	D,[A]
01/C9:          
01/C8:          	; PRINT FIRST NYBBLE
01/C8: 38F0     	LOADI	C,0XF0
01/CA:          
01/C9:          	; SHIFT LAST 4 BITS OF D INTO FIRST 4 BITS OF A
01/C9: 4F00     0:	SHIFTL	D
01/CA: F003     	BRC	1F
01/CB: 4A00     	SHIFTL	C
01/CC: F4FC     	BRN	0B
01/CD: FF03     	JUMP	2F
01/CE: 4A00     1:	SHIFTL	C
01/CF: 5801     	ADDI	C,1
01/D0: F4F8     	BRN	0B
01/D2:          	
01/D1:          	; CONVERT TO ASCII 0..9 / A..F
01/D1: 780A     2:	SUBI	C,10
01/D2: F401     	BRN	3F
01/D3: 5807     	ADDI	C,'A'-('0'+10)
01/D4: 583A     3:	ADDI	C,'0'+10
01/D5: A890     	STORE	[UART_TH],C
01/D7:          	
01/D6:          	; WAIT FOR UART TO READY
01/D6: 8895     0:	LOAD	C,[UART_LS]
01/D7: 4A00     	SHIFTL	C
01/D8: 4A00     	SHIFTL	C
01/D9: 4A00     	SHIFTL	C
01/DA: F1FB     	BRNC	0B
01/DC:          
01/DB:          	; PRINT FIRST NYBBLE
01/DB: 38F0     	LOADI	C,0XF0
01/DD:          
01/DC:          	; SHIFT LAST 4 BITS OF D INTO FIRST 4 BITS OF A
01/DC: 4F00     0:	SHIFTL	D
01/DD: F003     	BRC	1F
01/DE: 4A00     	SHIFTL	C
01/DF: F4FC     	BRN	0B
01/E0: FF03     	JUMP	2F
01/E1: 4A00     1:	SHIFTL	C
01/E2: 5801     	ADDI	C,1
01/E3: F4F8     	BRN	0B
01/E5:          	
01/E4:          	; CONVERT TO ASCII 0..9 / A..F
01/E4: 780A     2:	SUBI	C,10
01/E5: F401     	BRN	3F
01/E6: 5807     	ADDI	C,'A'-('0'+10)
01/E7: 583A     3:	ADDI	C,'0'+10
01/E8: A890     	STORE	[UART_TH],C
01/EA:          
01/E9:          	; INCREMENT POINTER
01/E9: 5001     	ADDI	A,1
01/EA: F5C8     	BRNN	DLOOP
01/EB: 3004     	LOADI	A,4
01/EC: 5401     	ADDI	B,1
01/ED: D100     	CMP	A,B
01/EE: 3000     	LOADI	A,0
01/EF: F7C3     	BRNZ	DLOOP
01/F0: FF0F     	JUMP	RETURN
01/F2:          	
01/F1:          	; WAIT FOR THE UART TO BECOME READY
01/F1:          	; USES: D
01/F1: 8C95     UWAIT:	LOAD	D,[UART_LS]
01/F2: 4F00     	SHIFTL	D
01/F3: 4F00     	SHIFTL	D
01/F4: 4F00     	SHIFTL	D
01/F5: F1FB     	BRNC	UWAIT
01/F6: FE09     	JUMPR	C
