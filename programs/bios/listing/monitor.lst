00/00:          ; MONITOR.S
01/00:          ; PUNY MEMORY MONITOR
01/00:          ; GAVIN TERSTEEG, 2024
01/00:          ; SDMAY24-14
01/00:          
01/00:          ; DEFINES
01/00:          DBANK	= 0X80		; DATA BANK ADDRESS
01/00:          UART	= 0X90		; UART BASE ADDRESS
01/00:          UART_RH	= UART+0X00	; UART READ HOLDING
01/00:          UART_TH	= UART+0X00	; UART TRANSMIT HOLDING
01/00:          UART_DL = UART+0X00	; UART DIVISOR LOW
01/00:          UART_DH = UART+0X01	; UART DIVISOR HIGH
01/00:          UART_LC = UART+0X03	; UART LINE CONTROL
01/00:          UART_LS	= UART+0X05	; UART LINE STATUS
01/00:          SCRATCH	= UART+0X07	; SCRATCH BYTE ADDRESS
01/00:          
01/00:          .BANK 0
00/00:          .TEXT
00/00:          	; SET UP THE UART
00/00:          	; WE WILL DO 9600 BAUD 8N1 
00/00: 3080     INIT:	LOADI	A,0X80
00/01: A093     	STORE	[UART_LC],A
00/03:          	
00/02:          	; DIVISOR = 12
00/02: 300C     	LOADI	A,12
00/03: A090     	STORE	[UART_DL],A
00/04: 3000     	LOADI	A,0
00/05: A091     	STORE	[UART_DH],A
00/07:          	
00/06:          	; SET 8-BIT, 1 STOP, RESET DLAB
00/06: 3003     	LOADI	A,0X03
00/07: A093     	STORE	[UART_LC],A
00/09:          
00/08:          	; SEND OUT A PROMPT
00/08: 300A     START:	LOADI	A,0X0A
00/09: 380B     	LOADI	C,@+2
00/0A: FF40     	JUMP	SCHAR
00/0B: 300D     	LOADI	A,0X0D
00/0C: 380E     	LOADI	C,@+2
00/0D: FF3D     	JUMP	SCHAR
00/0E: 3040     	LOADI	A,'@'
00/0F: 3811     	LOADI	C,@+2
00/10: FF3A     	JUMP	SCHAR
00/12:          	
00/11:          	; GET A HEX NUMBER
00/11: 3813     	LOADI	C,@+2
00/12: FF3F     	JUMP	FROMHEX
00/13: 3815     	LOADI	C,@+2
00/14: FF3D     	JUMP	FROMHEX
00/16:          	
00/15:          	; GET COMMAND
00/15: 3817     	LOADI	C,@+2
00/16: FF2B     	JUMP	GCHAR
00/17: 702D     	SUBI	A,'-'
00/18: F61A     	BRZ	ISR
00/19: 7002     	SUBI	A,'/'-'-'
00/1A: F610     	BRZ	DATA
00/1B: 700E     	SUBI	A,'='-'/'
00/1C: F609     	BRZ	PEEK
00/1D: 7005     	SUBI	A,'B'-'='
00/1E: F604     	BRZ	SBANK
00/1F: 7005     	SUBI	A,'G'-'B'
00/20: F7E7     	BRNZ	START
00/21: 2B00     	MOV	C,D
00/22: FEDD     	JUMPR	C
00/24:          	
00/23:          	; SET THE BANK
00/23: 0C00     SBANK:	BANK	D
00/24: AC80     	STORE	[DBANK],D
00/25: FFE2     	JUMP	START
00/27:          
00/26:          	; VIEW DATA BYTE
00/26: 9F00     PEEK:	LOADF	D,[D]
00/28:          	
00/27:          	; PRINT IT OUT
00/27: 3829     	LOADI	C,@+2
00/28: FF43     	JUMP	TOHEX
00/29: 3808     	LOADI	C,START
00/2A: FF41     	JUMP	TOHEX
00/2C:          
00/2B:          	; EDIT DATA BYTE
00/2B: AC97     DATA:	STORE	[SCRATCH],D
00/2D:          	
00/2C:          	; GET A HEX NUMBER
00/2C: 382E     	LOADI	C,@+2
00/2D: FF24     	JUMP	FROMHEX
00/2E: 3830     	LOADI	C,@+2
00/2F: FF22     	JUMP	FROMHEX
00/31:          	
00/30:          	; PUT IT INTO MEMORY
00/30: 8097     	LOAD	A,[SCRATCH]
00/31: BC00     	STOREF	[A],D
00/32: FFD5     	JUMP	START
00/34:          	
00/33:          	; EDIT ISR WORD
00/33: AC97     ISR:	STORE	[SCRATCH],D
00/35:          
00/34:          	; GET A HEX NUMBER
00/34: 3836     	LOADI	C,@+2
00/35: FF1C     	JUMP	FROMHEX
00/36: 3838     	LOADI	C,@+2
00/37: FF1A     	JUMP	FROMHEX
00/39:          	
00/38:          	; CACHE IT
00/38: 2300     	MOV	A,D
00/39: 1400     	CACHE	A
00/3B:          	
00/3A:          	; GET A HEX NUMBER
00/3A: 383C     	LOADI	C,@+2
00/3B: FF16     	JUMP	FROMHEX
00/3C: 383E     	LOADI	C,@+2
00/3D: FF14     	JUMP	FROMHEX
00/3F:          	
00/3E:          	; WRITE IT
00/3E: 2300     	MOV	A,D
00/3F: 8C97     	LOAD	D,[SCRATCH]
00/40: 1E00     	WRITE	[D+0],A
00/41: FFC6     	JUMP	START
00/43:          	
00/42:          
00/42:          
00/42:          	; GET CHARACTER
00/42:          	; TYPED CHARACTER RETURNED IN A
00/42:          	; USES: A
00/42: 8095     GCHAR:	LOAD	A,[UART_LS]
00/44:          
00/43:          	; CHECK 0TH BIT OF LINE STATUS
00/43: C100     	SHIFTR	A
00/44: F1FD     	BRNC	GCHAR
00/46:          	
00/45:          	; RECIEVE CHARACTER
00/45: 8090     	LOAD	A,[UART_RH]
00/47:          	
00/46:          	; CONVERT TO UPPER CASE
00/46: 5020     	ADDI	A,0X20
00/47: F501     	BRNN	0F
00/48: 7020     	SUBI	A,0X20
00/49: 7020     0:	SUBI	A,0X20
00/4B:          	
00/4A:          	; NOW, ECHO CHARACTER
00/4A: FF05     	JUMP COUT
00/4C:          
00/4B:          	; SEND CHARACTER
00/4B:          	; A = CHARACTER TO SEND
00/4B:          	; USES: A, B
00/4B: 8495     SCHAR:	LOAD	B,[UART_LS]
00/4D:          	
00/4C:          	; CHECK 5TH BIT OF LINE STATUS
00/4C: 4500     	SHIFTL	B
00/4D: 4500     	SHIFTL	B
00/4E: 4500     	SHIFTL	B
00/4F: F1FB     	BRNC	SCHAR
00/51:          	
00/50:          	; TRANSMIT CHARACTER
00/50: A090     COUT:	STORE	[UART_TH],A
00/52:          	
00/51:          	; RETURN
00/51: FEAE     	JUMPR	C
00/53:          	
00/52:          	; CONVERTS ASCII HEX INTO HALF A BYTE
00/52:          	; A = BYTE TO CONVERT
00/52:          	; RETURNS D=D<<4 + HEX(A)
00/52:          	; USES: A, B, D
00/52: 2600     FROMHEX:MOV	B,C
00/53: 3855     	LOADI	C,@+2
00/54: FFED     	JUMP	GCHAR
00/55: 2900     	MOV	C,B
00/57:          	
00/56:          	; D=D<<4
00/56: 4F00     	SHIFTL	D
00/57: 4F00     	SHIFTL	D
00/58: 4F00     	SHIFTL	D
00/59: 4F00     	SHIFTL	D
00/5B:          	
00/5A: 3430     	LOADI	B,'0'
00/5B: D100     	CMP	A,B
00/5C: F1AB     	BRB	START
00/5D: 3439     	LOADI	B,'9'
00/5E: D100     	CMP	A,B
00/5F: F803     	BRA	0F
00/60: 7030     	SUBI	A,'0'
00/61: 4C00     	ADD	D,A
00/62: FE9D     	JUMPR	C
00/64:          	
00/63: 3441     0:	LOADI	B,'A'
00/64: D100     	CMP	A,B
00/65: F1A2     	BRB	START
00/66: 3446     	LOADI	B,'F'
00/67: D100     	CMP	A,B
00/68: F89F     	BRA	START
00/69: 7037     	SUBI	A,'A'-10
00/6A: 4C00     	ADD	D,A
00/6B: FE94     	JUMPR	C
00/6D:          	
00/6C:          	; CONVERT HALF A BYTE INTO ASCII HEX
00/6C:          	; D[7:4] = NYBBLE TO CONVERT
00/6C:          	; RETURNS D=D<<4 AND ASCII IN A
00/6C:          	; USES: A, B, D
00/6C: 30F0     TOHEX:	LOADI	A,0XF0
00/6E:          
00/6D:          	; SHIFT LAST 4 BITS OF D INTO FIRST 4 BITS OF A
00/6D: 4F00     0:	SHIFTL	D
00/6E: F003     	BRC	1F
00/6F: 4000     	SHIFTL	A
00/70: F4FC     	BRN	0B
00/71: FF03     	JUMP	2F
00/72: 4000     1:	SHIFTL	A
00/73: 5001     	ADDI	A,1
00/74: F4F8     	BRN	0B
00/76:          	
00/75:          	; CONVERT TO ASCII 0..9 / A..F
00/75: 700A     2:	SUBI	A,10
00/76: F402     	BRN	3F
00/77: 5041     	ADDI	A,'A'
00/78: FFD2     	JUMP	SCHAR
00/79: 503A     3:	ADDI	A,'0'+10
00/7A: FFD0     	JUMP	SCHAR
00/7C:          
