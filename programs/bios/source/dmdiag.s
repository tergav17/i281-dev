; DMDIAG.S
; DATA MEMORY DIAGNOSTIC
; GAVIN TERSTEEG, 2024
; SDMAY24-14

; THIS TEST WILL EXERCISE DATA MEMORY FOR ALL DATA MEMORY LOCATIONS
; THE GOAL IS TO MAKE SURE THAT ALL WRITES AND READBACKS ARE SANE
; VALUES, NO ATTEMPT AT TESTING DOUBLE WRITES IS MADE
;
; SW0: 0 = RESET AND WAIT ON FAIL, 1 = PRESERVE CONTEXT ON FAIL
; SW1: 0 = HALT ON FAIL, 1 = CONTINUE EXECUTION
; SW2: 0 = INCREMENT CONTEXT AFTER TEST, 1 = RETRY TEST

.BANK 0
.TEXT

	; JUMP TABLE 
	JUMP	FAIL
	JUMP	PASS

	; EITHER THE TEST HAS JUST STARTED OR A PASS HAS FAILED
	; SEND OFF AN ACCESS TO DEVICE 0XF0
	; THIS CAN BE CAUGHT BY AN SCOPE
FAIL:	LOAD	D,[0XF0]

	; GET THE SENSE SWITCHE 
0:	INPUTD	[TEMP]
	LOAD	C,[TEMP]

	; CHECK FOR INIT
	SHIFTR	C
	BRNC	INIT
	
	; CHECK FOR HALT
	SHIFTR	C
	BRNC	0B
	
	; DO WE INCREMENT COUNTER OR TRY AGAIN?
	SHIFTR	C
	BRC	ATTEMPT
	JUMP	NEXT
	
	; INITALIZE TEST
INIT:	LOADI	A,0
	STORE	[TESTVAL],A
	STORE	[CBANK],A
	STORE	[DELTA],A
	
	; WAIT FOR TEST TO START
0:	INPUTD	[TEMP]
	LOAD	C,[TEMP]
	SHIFTR	C
	BRNC	0B
	
	JUMP	NEWBANK
	
	; FIRST, CHECK AND MAKE SURE THAT 'A' MATCHES THE
	; EXPECTED TEST VALUE
PASS:	LOAD	B,[TESTVAL]
	CMP	A,B
	BRNZ	FAIL
	
	; GET THE SWITCH VALUE
	INPUTD	[TEMP]
	LOAD	C,[TEMP]
	SHIFTR	C
	SHIFTR	C
	SHIFTR	C
	BRC	ATTEMPT
	
	; INCREMENT CONTEXT
NEXT:	LOAD	A,[TESTVAL]
	ADDI	A,1
	STORE	[TESTVAL],A
	BRNC	ATTEMPT
	LOAD	A,[ADDRESS]
	ADDI	A,1
	STORE	[ADDRESS],A
	SUBI	A,0XFF
	BRNZ	ATTEMPT
	
	; NEXT BANK
	LOAD	A,[CBANK]
	ADDI	A,1
	STORE	[CBANK],A
	
	; FILL BANK WITH NOOP INSTRUCTIONS
NEWBANK:LOADI	C,0X80
	LOAD	B,[CBANK]
	BANK	B
0:	LOADI	A,0X20
	CACHE	A
	LOADI	A,0
	WRITE	[C],A
	ADDI	C,1
	BRN	0B
	
	; RESET ADDRESS
	LOADI	A,0X80
	STORE	[ADDRESS],A

	; DO ATTEMPT
	; INCREMENT DELTA
ATTEMPT:LOAD	C,[DELTA]
	ADDI	C,1
	STORE	[DELTA],C

	; SET DISPLAY VALUES
	LOADI	C,CBANK
0:	LOADF	A,[C]
	SHIFTR	A
	SHIFTR	A
	SHIFTR	A
	SHIFTR	A
	STOREF	[C+0-1],A
	SUBI	C,2
	BRNN	0B
	
	; SET BANK
	LOAD	B,[CBANK]
	BANK	B
	
	; SET REGISTER VALUE
	LOADI	A,0X30
	CACHE	A
	LOAD	A,[TESTVAL]
	LOAD	C,[ADDRESS]
	WRITE	[C],A
	
	; SET JUMP INSTRUCTION
	LOADI	A,0XFF
	CACHE	A
	SUB	A,C
	WRITE	[C+1],A
	
	; OFFSET BANK
	BANK	B+1
	
	; DO A FEW NOOPS
	NOOP
	NOOP
	LOAD	A,[TESTVAL]
	ADDI	A,1
	
	; SEND OFF AN ACCESS TO DEVICE 0XE0
	; THIS CAN BE CAUGHT BY AN SCOPE
	LOAD	D,[0XE0]
	
	; EXECUTE JUMP
	BANK	B
	JUMPR	C


	; MEMORY AREAS
.BSS

	; STATE DATA
.DEF BYTE		0
.DEFL BYTE DELTA	0
.DEF BYTE		0
.DEFL BYTE TESTVAL	0
.DEF BYTE		0
.DEFL BYTE ADDRESS	0
.DEF BYTE		0
.DEFL BYTE DBANK	0

	; TEMP VALUE
.DEFL BYTE TEMP 	0