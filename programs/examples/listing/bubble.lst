00/00:          ; BUBBLE.S
01/80:          ; BUBBLE SORT EXAMPLE
01/80:          .TEXT
01/80:          
01/80:          LAST	= 7
01/80:          
01/80: 3000     	LOADI  A, 0                  ; I = 0;
01/81: 3C07     OUTER:  LOADI  D, LAST             ; LOAD LAST INTO D
01/82: 3400             LOADI  B, 0                  ; J = 0;
01/83: D300             CMP    A, D                  ; I < LAST
01/84: FB0E             BRGE   END                   ; IF I >= LAST BREAK OUT OF THE OUTER LOOP
01/86:          
01/85: 3C07     LOOP:	LOADI  D, LAST               ; RE-LOAD LAST INTO D (THIS REGISTER IS SHARED)
01/86: 6C00             SUB    D, A                  ; D = D - A  (I.E., D = LAST - I)
01/87: D700             CMP    B, D                  ; J < LAST - I
01/88: FB08             BRGE   IINC                  ; IF J >= LAST-I  BRANCH TO IINC
01/89: 9900     	LOADF  C, [B+ARRAY]          ; C = ARRAY[J]
01/8A: 9D01             LOADF  D, [B+ARRAY+1]        ; D = ARRAY[J+1] (COMPILER ADDS 1 TO ADDR. OF ARRAY)
01/8B: DE00             CMP    D, C                  ; IF ARRAY[J+1] < ARRAY[J]  (SWITCHED DIRECTION)
01/8C: FB02             BRGE   JINC
01/8D: BD00     SWAP:   STOREF [B+ARRAY], D
01/8E: B901             STOREF [B+ARRAY+1], C
01/8F: 5401     JINC:   ADDI   B, 1                  ; J++
01/90: FFF4             JUMP   LOOP		     ; JUMP BACK TO LINE 14
01/91: 5001     IINC:   ADDI   A, 1                  ; I++
01/92: FFEE             JUMP   OUTER
01/93: FFFF     END:    JUMP   END                   ; DO NOTHING
01/95:          
01/94:          .DATA
01/94:          
01/00: 08070605
       04030201 .DEFL BYTE ARRAY	8, 7, 6, 5, 4, 3, 2, 1
01/08: 00       .DEFL BYTE TEMP		0
