; MERGE.S
; MERGE SORT WITH RECURSIVE SUBROUTINES AND STACK

; DEFINES
ARRSIZE	=	8	; ARRAY SIZE
RETURN	=	0	; RETURN ADDRESS
LEFT	=	1	; LEFT INDEX
MIDDLE	=	2	; MIDDLE INDEX
RIGHT	=	3	; RIGHT INDEX


.TEXT
	; START HERE
START:
	; BEGIN BY SETTING "STACK POINTER" (REG D)
	LOADI	D,0X17

	; LOAD ARGUMENTS FOR INITIAL MERGE SORT
	; A = LEFT INDEX
	LOADI	A,ARRAY
	; B = RIGHT INDEX
	LOADI	B,ARRAY+(ARRSIZE-1)
	
	; EXECUTE FUNCTION CALL
	; THE RETURN ADDRESS MUST BE PLACED ON THE STACK
	; '@' SYMBOL REPRESENTS THE CURRENT PC
	LOADI	C,@+3
	STOREF	[D+RETURN],C
	JUMP	MERGE
	
	; AND HALT...
END:	JUMP	END

	; MERGE FUNCTION CALL
	; A = LEFT INDEX
	; B = RIGHT INDEX
	; RETURNS: NOTHING
MERGE:
	; ALLOCATE SPACE ON THE STACK FOR LOCAL VARIABLES (4 BYTES)
	; D + 0 = FRAME RETURN ADDRESS
	; D + 1 = LEFT INDEX
	; D + 2 = RIGHT INDEX
	; D + 3 = MIDDLE INDEX
	; D + 4 = FRAME RETURN ADDRESS (PREVIOUS FRAME)
	SUBI	D,4
	
	; START BY COMPARING LEFT INDEX TO RIGHT INDEX
	CMP	A,B
	
	; IF A >= B, JUST RETURN INSTANTLY
	BRAE	9F
	
	; CALCULATE C = (A + B) / 2
	MOV	C,A
	ADD	C,B
	SHIFTR	C
	
	; PLACE REGISTERS INTO THE STACK
	STOREF	[D+LEFT],A
	STOREF	[D+RIGHT],B
	STOREF	[D+MIDDLE],C
	
	; CALL MERGESORT ON LEFT -> MIDDLE
	; A = LEFT INDEX
	; B = MIDDLE INDEX
	MOV	B,C
	
	; EXECUTE FUNCTION CALL
	; THE RETURN ADDRESS MUST BE PLACED ON THE STACK
	LOADI	C,@+3
	STOREF	[D+RETURN],C
	JUMP	MERGE
	
	; NOW MERGESORT MIDDLE + 1 -> RIGHT
	; A = MIDDLE + 1 INDEX
	; B = RIGHT INDEX
	LOADF	A,[D+MIDDLE]
	ADDI	A,1
	LOADF	B,[D+RIGHT]
	
	; EXECUTE FUNCTION CALL
	; THE RETURN ADDRESS MUST BE PLACED ON THE STACK
	LOADI	C,@+3
	STOREF	[D+RETURN],C
	JUMP	MERGE
	
	; NOW THAT'S OUT OF THE WAY
	; LETS MERGE THE TWO SUB-ARRAYS TOGETHER
	; FIRST SEE IF THE DIRECT MERGE IS ALREADY SORTED
	LOADF	C,[D+MIDDLE]
	LOADF	A,[C]
	LOADF	B,[C+1]
	CMP	A,B
	BRLE	9F

	; ALRIGHT, MERGE TIME
	; LEFT <= MID
0:	LOADF	A,[D+LEFT]
	LOADF	B,[D+MIDDLE]
	CMP	A,B
	BRG	9F
	
	; MID+1 <= RIGHT
	ADDI	B,1
	LOADF	C,[D+RIGHT]
	CMP	B,C
	BRG	9F
	
	; ARRAY[LEFT] <= ARRAY[MID+1]
	LOADF	A,[A]
	LOADF	C,[B]
	CMP	A,C
	
	; IF SO, ONLY INCREMENT LEFT
	BRLE	3F
	
	; MERGE THE VALUE IN C IN BYTE SHIFTING THE ARRAY ELEMENTS OVER
	; REMEMBER, C = ARRAY[MID+1], B = MID+1
1:	LOADF	A,[D+LEFT]
	CMP	A,B
	BRE	2F
	SUBI	B,1
	LOADF	A,[B]
	STOREF	[B+1],A
	JUMP	1B

	; LOOP COMPLETE
2:	STOREF	[A],C

	; MIDDLE++
	LOADF	A,[D+MIDDLE]
	ADDI	A,1
	STOREF	[D+MIDDLE],A
	
3:	; LEFT++
	LOADF	A,[D+LEFT]
	ADDI	A,1
	STOREF	[D+LEFT],A
	JUMP	0B
	
	; RETURN FUNCTION
	; POP EVERYTHING OFF THE STACK
	; AND JUMPR TO THE PREVIOUS FRAME
9:	ADDI	D,4
	LOADF	C,[D+RETURN]
	JUMPR	C

; DATA SEGMENT
.DATA
.DEFL BYTE ARRAY	7, 6, 5, 4, 3, 2, 1, 0
