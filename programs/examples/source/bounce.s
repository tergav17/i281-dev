; BOUNCE.S
; A SMALL VT100 TEST PROGRAM

; DEFINES
DBANK	=	0X80
UART	=	0X90
UART_TH	=	UART+0X00
UART_RH	=	UART+0X00
UART_LC	=	UART+0X03
UART_LS	=	UART+0X05


; NUMBER OF BOUNCERS
NUM = 	10

.BANK 1
.TEXT

	; START HERE
START:	LOADI	D,HELLO
	LOADI	C,@+2
	JUMP	PRINT

	; UPDATE ALL OF THE BOUNCER POSITIONS
UPDATE:	LOADI	D,NUM-1
	
	; DO X POSITION FIRST
0:	LOADF	A,[D+X]
	LOADF	B,[D+DX]
	SUBI	B,1
	ADD	A,B
	BRNN	1F

	; UNDERFLOW ON X SIDE
	LOADI	B,2
	STOREF	[D+DX],B
	LOADI	A,1
	JUMP	2F
	
1:	LOADI	B,79
	CMP	A,B
	BRB	2F
	
	; OVERFLOW ON X SIDE
	LOADI	B,0
	STOREF	[D+DX],B
	LOADI	A,77
	
2:	STOREF	[D+X],A

	; NEXT, Y POSITION
	LOADF	A,[D+Y]
	LOADF	B,[D+DY]
	SUBI	B,1
	ADD	A,B
	BRNN	1F

	; UNDERFLOW ON Y SIDE
	LOADI	B,2
	STOREF	[D+DY],B
	LOADI	A,1
	JUMP	2F
	
1:	LOADI	B,24
	CMP	A,B
	BRB	2F
	
	; OVERFLOW ON Y SIDE
	LOADI	B,0
	STOREF	[D+DY],B
	LOADI	A,22
	
2:	STOREF	[D+Y],A

	; DO THE NEXT ONE
	SUBI	D,1
	BRC	0B
	
	; NOW PRINT 'EM OFF
		
	; CLEAR OUT SCREEN
	LOADI	D,CLRSTR
	LOADI	C,@+2
	JUMP	PRINT
	
	; DRAW EACH BOUNCER
	LOADI	D,NUM-1
DRAW:	STORE	[CURR],D
	
	; CONVERT THE X TO DECIMAL
	LOADF	B,[D+X]
	ADDI	B,1
	LOADI	A,'0'
0:	SUBI	B,10
	BRNC	1F
	ADDI	A,1
	JUMP	0B
1:	ADDI	B,10+'0'
	STORE	[ARGX],A
	STORE	[ARGX+1],B
	
	; CONVERT THE Y TO DECIMAL
	LOADF	B,[D+Y]
	ADDI	B,1
	LOADI	A,'0'
0:	SUBI	B,10
	BRNC	1F
	ADDI	A,1
	JUMP	0B
1:	ADDI	B,10+'0'
	STORE	[ARGY],A
	STORE	[ARGY+1],B
	
	; PRINT IT
	LOADI	D,PCHAR
	LOADI	C,@+2
	JUMP	PRINT
	
	; DO THE NEXT ONE
	LOAD	D,[CURR]
	SUBI	D,1
	BRC	DRAW
	
	; NOW DELAY A LITTLE BIT AND THEN GO BACK
	LOADI	A,0
	LOADI	B,20
0:	ADDI	A,1
	BRNZ	0B
	SUBI	B,1
	BRNZ	0B
	
	JUMP	UPDATE
	

	; PRINTS OUT A STRING
	; D = STRING TO PRINT
	; USES: A, B, D
	; GET LINE STATUS REGISTER
	; LOAD STRING CHARACTER
PRINT:	LOADF	A,[D]

	; MAKE SURE IT ISNT ZERO
	ADDI	A,0
	BRZ	1F
	
	; GET LINE STATUS REGISTER
0:	LOAD	B,[UART_LS]
	
	; READ 5TH BIT TO SEE IF WE CAN TRANSMIT YET
	SHIFTL	B
	SHIFTL	B
	SHIFTL	B
	BRNC	0B
	
	; TRANSMIT BYTE
	LOADI	B,0X03
;	STORE	[UART_LC],B
	STORE	[UART_TH],A
	
	; INCREMENT POINTER AND REDO
	ADDI	D,1
	JUMP	PRINT
	
	; RETURN
1:	JUMPR	C


.DATA

; BOUNCER POSITION AND SPEED
.DEFL BYTE X	77,23,31,48,22,9,18,8,4,47
.DEFL BYTE Y	22,3,9,16,21,20,13,2,8,5
.DEFL BYTE DX	2,0,0,0,2,2,2,2,0,0
.DEFL BYTE DY	2,0,0,0,2,2,0,0,2,2

; CURRENT BOUNCER BEING PROCESSED
.DEFL BYTE CURR		0

; VARIOUS STRINGS
.DEFL BYTE CLRSTR	0X1B,"[2J",0
.DEFL BYTE PCHAR	0X1B,"["
.DEFL BYTE ARGY		"00;"
.DEFL BYTE ARGX		"00H"
.DEFL BYTE CHAR		":3",0

.DEFL BYTE HELLO 	0X0A,0X0D,"BOUNCE PROGRAM",0X0A,0X0D,0